apply plugin: 'com.android.library'

def opCps = [
        "OP_CPS0", "OP_CPS9", "OP_CPS12", "OP_CPS13", "OP_CPS18", "OP_CPS19", "OP_CPS20",
        "OP_CPS25", "OP_CPS39", "OP_CPS42", "OP_CPS49", "OP_CPS61", "OP_CPS75", "OP_CPS76",
        "OP_CPS85", "OP_CPS89", "OP_CPS96", "OP_CPS98", "OP_CPS114", "OP_CPS115", "OP_CPS116",
        "OP_CPS117", "OP_CPS120", "OP_CPS126", "OP_CPS129", "OP_CPS130", "OP_CPS131", "OP_CPS132",
        "OP_CPS133", "OP_CPS134", "OP_CPS135", "OP_CPS136", "OP_CPS137", "OP_CPS138", "OP_CPS139",
        "OP_CPS140", "OP_CPS141", "OP_CPS142", "OP_CPS143", "OP_CPS147", "OP_CPS152",
        "OP_CPS155", "OP_CPS167", "OP_CPS168", "OP_CPS169", "OP_CPS170", "OP_CPS174",
        "OP_CPS175", "OP_CPS176", "OP_CPS184", "OP_CPS186", "OP_CPS195", "OP_CPS197",
        "OP_CPS199", "OP_CPS202", "OP_CPS203", "OP_CPS204",
        "OP_CPS207", "OP_CPS210",
        "OP_CPS218", "OP_CPS220", "OP_CPS226", "OP_CPS229",
        "OP_CPS230", "OP_CPS232", "OP_CPS234", "OP_CPS248", "OP_CPS249",
        "OP_CPS253",
        "OP_CPS268", "OP_CPS270",
        "OP_CPS271", "OP_CPS272", "OP_CPS274", "OP_CPS275", "OP_CPS276", "OP_CPS277", "OP_CPS278",
        "OP_CPS280", "OP_CPS281", "OP_CPS283",
        "OP_CPS290", "OP_CPS291",
        "OP_CPS298", "OP_CPS299"
]

android {
    namespace 'com.guajibase.gamelib'
    compileSdkVersion 34

    buildFeatures {
        buildConfig = true // Should be true by default, but ensure it's not disabled
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }
        H365 {
            java.srcDirs = ['platformSrc/H365']
            jniLibs.srcDirs = ['platformlibs/H365']
            res.srcDirs = ['H365/res']
        }
        EROR18{
            java.srcDirs = ['platformSrc/EROR18']
            jniLibs.srcDirs = ['platformlibs/EROR18']
            res.srcDirs = ['EROR18/res']
        }
        JSG {
            java.srcDirs = ['platformSrc/JSG']
            jniLibs.srcDirs = ['platformlibs/JSG']
            res.srcDirs = ['JSG/res']
        }
        KUSO {
            java.srcDirs = ['platformSrc/KUSO']
            jniLibs.srcDirs = ['platformlibs/KUSO']
            res.srcDirs = ['KUSO/res']
        }
        EROLABS{
            java.srcDirs = ['platformSrc/EROLABS']
            jniLibs.srcDirs = ['platformlibs/EROLABS']
            res.srcDirs = ['EROLABS/res']
        }
        APLUS_CPS1 {
            java.srcDirs = ['platformSrc/APLUS', 'platformSrc/APLUS_CPS1']
            jniLibs.srcDirs = ['platformlibs/APLUS']
            res.srcDirs = ['APLUS/res']
        }
        for (cps in opCps) {
            "${cps}" {
                java.srcDirs = ['platformSrc/OP', "platformSrc/OP_CPS/${cps}"]
                jniLibs.srcDirs = ['platformlibs/OP']
                res.srcDirs = ['OP/res']
            }
        }
        GP{
            java.srcDirs = ['platformSrc/GP', 'platformSrc/GP']
            jniLibs.srcDirs = ['platformlibs/GP']
            res.srcDirs = ['GP/res']
        }

        // Move the tests to tests/java, tests/res, etc...
        androidTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    flavorDimensions "app_type"
    productFlavors {
        H365 {
            dimension "app_type"
            dependencies {
                compileOnly fileTree(dir:'platformlibs/H365', include: ['*.aar'])
                compileOnly fileTree(dir:'libs', include: ['*.aar'])
                implementation   project(':sdklibs:libcocos2dx')
                implementation 'com.android.installreferrer:installreferrer:1.0'
                implementation 'com.google.android.gms:play-services-appset:16.0.2'
                implementation 'com.google.android.gms:play-services-ads-identifier:18.0.1'
                implementation 'com.google.code.gson:gson:2.8.5'
                implementation 'com.squareup.okhttp3:okhttp:4.12.0'
                //implementation  project(':sdklibs:h365app')
            }
            defaultConfig {
                minSdkVersion 21
            }
        }
        EROR18 {
            dimension "app_type"
            dependencies {
                compileOnly fileTree(dir: 'platformlibs/EROR18', include: ['*.aar'])
                compileOnly fileTree(dir: 'libs', include: ['*.aar'])
                implementation project(':sdklibs:libcocos2dx')
                //implementation 'com.adjust.sdk:adjust-android-huawei-referrer:5.0.0'
                implementation 'com.android.installreferrer:installreferrer:2.2'
                implementation 'com.squareup.okhttp3:okhttp:4.12.0'
            }
            defaultConfig {
                minSdkVersion 21
            }
        }
        JSG {
            dimension "app_type"
            dependencies {
                compileOnly  fileTree(dir: 'platformlibs/JSG', include: ['*.jar','*.aar'])
                compileOnly fileTree(dir:'libs', include: ['*.aar'])
                implementation   project(':sdklibs:libcocos2dx')
                implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
                implementation 'com.squareup.okhttp3:okhttp:4.12.0'
            }
            defaultConfig {
                minSdkVersion 21
            }
        }
        KUSO {
            dimension "app_type"
            dependencies {
                compileOnly  fileTree(dir: 'platformlibs/KUSO', include: ['*.aar'])
                compileOnly fileTree(dir:'libs', include: ['*.aar'])
                implementation   project(':sdklibs:libcocos2dx')
                implementation 'com.google.android.material:material:1.5.0-alpha02' // targetSdk为33以下
                implementation 'wang.harlon.quickjs:wrapper-android:1.0.0'
                implementation 'io.ktor:ktor-serialization-kotlinx-json:2.3.0'

                implementation 'io.ktor:ktor-client-android:2.3.0'
                implementation 'io.ktor:ktor-client-content-negotiation:2.3.0'
                implementation 'io.ktor:ktor-utils:2.3.0'

                implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
                implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
                implementation 'com.squareup.okhttp3:okhttp:4.12.0'


                constraints {
                    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0") {
                        because("kotlin-stdlib-jdk7 is now a part of kotlin-stdlib")
                    }
                    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0") {
                        because("kotlin-stdlib-jdk8 is now a part of kotlin-stdlib")
                    }
                }

            }
            defaultConfig {
                minSdkVersion 21
            }

//            // 下面配置,當Gradle 構建遇到依賴衝突時,就立刻構建失敗
//            configurations.all(){
//                Configuration configurations ->
//                    // 當遇到版本衝突時直接構建失敗
//                    configurations.resolutionStrategy.failOnVersionConflict()
//            }
        }

        EROLABS {
            dimension "app_type"
            dependencies {
                compileOnly fileTree(dir: 'platformlibs/EROLABS', include: ['*.jar','*.aar'])
                compileOnly fileTree(dir: 'libs', include: ['*.aar'])
                implementation project(':sdklibs:libcocos2dx')
                implementation 'com.squareup.okhttp3:okhttp:4.12.0'

            }
            defaultConfig {
                minSdkVersion 21
            }
        }

        APLUS_CPS1 {
            dimension "app_type"
            dependencies {
                compileOnly  fileTree(dir: 'platformlibs/KUSO', include: ['*.aar']) // 跟kuso使用同sdk
                compileOnly fileTree(dir:'libs', include: ['*.aar'])
                implementation   project(':sdklibs:libcocos2dx')
                implementation 'com.google.android.material:material:1.5.0-alpha02' // targetSdk为33以下
                implementation 'wang.harlon.quickjs:wrapper-android:1.0.0'
                implementation 'io.ktor:ktor-serialization-kotlinx-json:2.3.0'

                implementation 'io.ktor:ktor-client-android:2.3.0'
                implementation 'io.ktor:ktor-client-content-negotiation:2.3.0'
                implementation 'io.ktor:ktor-utils:2.3.0'

                implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
                implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
                implementation 'com.squareup.okhttp3:okhttp:4.12.0'


                constraints {
                    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0") {
                        because("kotlin-stdlib-jdk7 is now a part of kotlin-stdlib")
                    }
                    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0") {
                        because("kotlin-stdlib-jdk8 is now a part of kotlin-stdlib")
                    }
                }

            }
            defaultConfig {
                minSdkVersion 21
            }
        }

        for (cps in opCps) {
            "${cps}" {
                dimension "app_type"
                dependencies {
                    compileOnly fileTree(dir: 'platformlibs/OP', include: ['*.jar','*.aar'])
                    compileOnly fileTree(dir: 'libs', include: ['*.aar'])
                    implementation project(':sdklibs:libcocos2dx')
                    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
                }
                defaultConfig {
                    minSdkVersion 21
                }
            }
        }
        GP {
            dimension "app_type"
            dependencies {
                compileOnly fileTree(dir: 'libs', include: ['*.aar'])
                implementation project(':sdklibs:libcocos2dx')
                implementation 'com.squareup.okhttp3:okhttp:4.12.0'
            }
            defaultConfig {
                minSdkVersion 21
            }
        }

    }
    buildTypes {
        debug {
        }
        release {
        }
        qa {
            initWith release
            matchingFallbacks = ['release']
        }
    }
}
