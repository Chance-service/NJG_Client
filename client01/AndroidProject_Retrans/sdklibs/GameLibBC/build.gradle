apply plugin: 'com.android.library'

android {
    compileSdkVersion 30
    buildToolsVersion "28.0.3"

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }
        H365 {
            java.srcDirs = ['platformSrc/H365']
            jniLibs.srcDirs = ['platformlibs/H365']
            res.srcDirs = ['H365/res']
        }
        EROR18{
            java.srcDirs = ['platformSrc/EROR18']
            jniLibs.srcDirs = ['platformlibs/EROR18']
            res.srcDirs = ['EROR18/res']
        }
        JSG {
            java.srcDirs = ['platformSrc/JSG']
            jniLibs.srcDirs = ['platformlibs/JSG']
            res.srcDirs = ['JSG/res']
        }
//        LSJ {
//            java.srcDirs = ['platformSrc/LSJ']
//            jniLibs.srcDirs = ['platformlibs/LSJ']
//        }
        KUSO {
            java.srcDirs = ['platformSrc/KUSO']
            jniLibs.srcDirs = ['platformlibs/KUSO']
            res.srcDirs = ['KUSO/res']
        }
        EROLABS{
            java.srcDirs = ['platformSrc/EROLABS']
            jniLibs.srcDirs = ['platformlibs/EROLABS']
            res.srcDirs = ['EROLABS/res']
        }
        APLUS_CPS1 {
            java.srcDirs = ['platformSrc/APLUS', 'platformSrc/APLUS_CPS1']
            jniLibs.srcDirs = ['platformlibs/APLUS']
            res.srcDirs = ['APLUS/res']
        }
//        MURA {
//            java.srcDirs = ['platformSrc/MURA']
//            jniLibs.srcDirs = ['platformlibs/MURA']
//        }

        // Move the tests to tests/java, tests/res, etc...
        androidTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
    flavorDimensions "app_type"
    productFlavors {
        H365 {
            dimension "app_type"
            dependencies {
                compileOnly fileTree(dir:'platformlibs/H365', include: ['*.aar'])
                compileOnly fileTree(dir:'libs', include: ['*.aar'])
                implementation   project(':sdklibs:libcocos2dx')
                implementation 'com.android.installreferrer:installreferrer:1.0'
                implementation 'com.google.android.gms:play-services-appset:16.0.2'
                implementation 'com.google.android.gms:play-services-ads-identifier:18.0.1'
                implementation 'com.google.code.gson:gson:2.8.5'
                //implementation  project(':sdklibs:h365app')
            }
            defaultConfig {
                minSdkVersion 21
            }
        }
        EROR18 {
            dimension "app_type"
            dependencies {
                compileOnly fileTree(dir: 'platformlibs/EROR18', include: ['*.aar'])
                compileOnly fileTree(dir: 'libs', include: ['*.aar'])
                implementation project(':sdklibs:libcocos2dx')
                //implementation 'com.adjust.sdk:adjust-android-huawei-referrer:5.0.0'
                implementation 'com.android.installreferrer:installreferrer:2.2'
            }
            defaultConfig {
                minSdkVersion 21
            }
        }
        JSG {
            dimension "app_type"
            dependencies {
                compileOnly  fileTree(dir: 'platformlibs/JSG', include: ['*.jar','*.aar'])
                compileOnly fileTree(dir:'libs', include: ['*.aar'])
                implementation   project(':sdklibs:libcocos2dx')
                implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
                // libs
                //files('libs/ChannelManager.jar')
                //implementation(name:'JsGameSDK',ext:'aar')
            }
            defaultConfig {
                minSdkVersion 21
            }
        }
//        LSJ {
//            dimension "app_type"
//            dependencies {
//                implementation  fileTree(dir: 'platformlibs/LSJ', include: ['*.jar','*.aar'])
//                api fileTree(dir:'libs', include: ['*.aar'])
//                implementation  project(':sdklibs:libcocos2dx')
//                implementation 'androidx.appcompat:appcompat:1.3.1' // LSJ SDK need
//                implementation 'androidx.constraintlayout:constraintlayout:2.1.3' // LSJ SDK need.
//                implementation 'com.github.bumptech.glide:glide:4.12.0'
//                implementation 'io.github.lucksiege:pictureselector:v2.7.3-rc08'
//                //implementation  project(':sdklibs:lsjonline')
//            }
//            defaultConfig {
//                minSdkVersion 21
//            }
//        }
        KUSO {
            dimension "app_type"
            dependencies {
                compileOnly  fileTree(dir: 'platformlibs/KUSO', include: ['*.aar'])
                compileOnly fileTree(dir:'libs', include: ['*.aar'])
                implementation   project(':sdklibs:libcocos2dx')
                implementation 'com.google.android.material:material:1.5.0-alpha02' // targetSdk为33以下
                implementation 'wang.harlon.quickjs:wrapper-android:1.0.0'
                implementation 'io.ktor:ktor-serialization-kotlinx-json:2.3.0'

                implementation 'io.ktor:ktor-client-android:2.3.0'
                implementation 'io.ktor:ktor-client-content-negotiation:2.3.0'
                implementation 'io.ktor:ktor-utils:2.3.0'

                implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
                implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'


                constraints {
                    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0") {
                        because("kotlin-stdlib-jdk7 is now a part of kotlin-stdlib")
                    }
                    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0") {
                        because("kotlin-stdlib-jdk8 is now a part of kotlin-stdlib")
                    }
                }

            }
            defaultConfig {
                minSdkVersion 21
            }

//            // 下面配置,當Gradle 構建遇到依賴衝突時,就立刻構建失敗
//            configurations.all(){
//                Configuration configurations ->
//                    // 當遇到版本衝突時直接構建失敗
//                    configurations.resolutionStrategy.failOnVersionConflict()
//            }
        }

        EROLABS {
            dimension "app_type"
            dependencies {
                compileOnly fileTree(dir: 'platformlibs/EROLABS', include: ['*.jar','*.aar'])
                compileOnly fileTree(dir: 'libs', include: ['*.aar'])
                implementation project(':sdklibs:libcocos2dx')

            }
            defaultConfig {
                minSdkVersion 21
            }
        }
        APLUS_CPS1 {
            dimension "app_type"
            dependencies {
                compileOnly  fileTree(dir: 'platformlibs/KUSO', include: ['*.aar']) // 跟kuso使用同sdk
                compileOnly fileTree(dir:'libs', include: ['*.aar'])
                implementation   project(':sdklibs:libcocos2dx')
                implementation 'com.google.android.material:material:1.5.0-alpha02' // targetSdk为33以下
                implementation 'wang.harlon.quickjs:wrapper-android:1.0.0'
                implementation 'io.ktor:ktor-serialization-kotlinx-json:2.3.0'

                implementation 'io.ktor:ktor-client-android:2.3.0'
                implementation 'io.ktor:ktor-client-content-negotiation:2.3.0'
                implementation 'io.ktor:ktor-utils:2.3.0'

                implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
                implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'


                constraints {
                    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0") {
                        because("kotlin-stdlib-jdk7 is now a part of kotlin-stdlib")
                    }
                    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0") {
                        because("kotlin-stdlib-jdk8 is now a part of kotlin-stdlib")
                    }
                }

            }
            defaultConfig {
                minSdkVersion 21
            }
        }
//        MURA {
//            dimension "app_type"
//
//            dependencies {
//                api fileTree(dir: 'platformlibs/MURA', include: '*.aar')
//                api fileTree(dir:'libs', include: ['*.jar'])
//                implementation project(':sdklibs:libcocos2dx')
//                implementation 'androidx.core:core-ktx:1.7.0'
//                implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
//                implementation 'io.jsonwebtoken:jjwt-api:0.9.2'
//                implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
//                implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
//            }
//            defaultConfig {
//                minSdkVersion 21
//            }
//        }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }
}
