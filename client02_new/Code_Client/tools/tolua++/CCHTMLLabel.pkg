class CCHTMLLabel : public CCNode
{
public:
	static CCHTMLLabel* create();
	static CCHTMLLabel* createWithString(const char* utf8_str, const CCSize& preferred_size, const char* font_alias = DFONT_DEFAULT_FONTALIAS,float space = 1);
	bool initWithString(const char* utf8_str, const CCSize& preferred_size, const char* font_alias = DFONT_DEFAULT_FONTALIAS,float space = 1);

	// from CCLabelProtocol
	virtual void setString(const char *utf8_str);
	virtual const char* getString(void);

	// append string, faster if you only add additional string to tail
	virtual void appendString(const char *utf8_str);

	// from CCLayer
	virtual void draw();

	void registerListener(void* target, IRichEventHandler* listener);
	void removeListener(void* target);

	void registerLuaClickListener(LUA_FUNCTION click_handle)
	{
		if (click_handle)
			registerListener((void*)click_handle, new REvLuaHandler(click_handle, 0));
	}
	void registerLuaMovedListener(LUA_FUNCTION moved_handle)
	{
		if (moved_handle)
			registerListener((void*)moved_handle, new REvLuaHandler(0, moved_handle));
	}
	void removeLuaListener(LUA_FUNCTION handle)
	{
		removeListener((void*)handle);
	}


	CCHTMLLabel();
	virtual ~CCHTMLLabel();
};