// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Item.proto

#ifndef PROTOBUF_Item_2eproto__INCLUDED
#define PROTOBUF_Item_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Item_2eproto();
void protobuf_AssignDesc_Item_2eproto();
void protobuf_ShutdownFile_Item_2eproto();

class ItemInfo;
class HPItemInfoSync;

// ===================================================================

class ItemInfo : public ::google::protobuf::Message {
 public:
  ItemInfo();
  virtual ~ItemInfo();

  ItemInfo(const ItemInfo& from);

  inline ItemInfo& operator=(const ItemInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemInfo& default_instance();

  void Swap(ItemInfo* other);

  // implements Message ----------------------------------------------

  ItemInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemInfo& from);
  void MergeFrom(const ItemInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // required int32 itemId = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // required int64 count = 3;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 3;
  inline ::google::protobuf::int64 count() const;
  inline void set_count(::google::protobuf::int64 value);

  // required int32 status = 4;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 4;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional int32 exp = 5;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 5;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ItemInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_exp();
  inline void clear_has_exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int64 count_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Item_2eproto();
  friend void protobuf_AssignDesc_Item_2eproto();
  friend void protobuf_ShutdownFile_Item_2eproto();

  void InitAsDefaultInstance();
  static ItemInfo* default_instance_;
};
// -------------------------------------------------------------------

class HPItemInfoSync : public ::google::protobuf::Message {
 public:
  HPItemInfoSync();
  virtual ~HPItemInfoSync();

  HPItemInfoSync(const HPItemInfoSync& from);

  inline HPItemInfoSync& operator=(const HPItemInfoSync& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPItemInfoSync& default_instance();

  void Swap(HPItemInfoSync* other);

  // implements Message ----------------------------------------------

  HPItemInfoSync* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPItemInfoSync& from);
  void MergeFrom(const HPItemInfoSync& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ItemInfo itemInfos = 1;
  inline int iteminfos_size() const;
  inline void clear_iteminfos();
  static const int kItemInfosFieldNumber = 1;
  inline const ::ItemInfo& iteminfos(int index) const;
  inline ::ItemInfo* mutable_iteminfos(int index);
  inline ::ItemInfo* add_iteminfos();
  inline const ::google::protobuf::RepeatedPtrField< ::ItemInfo >&
      iteminfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::ItemInfo >*
      mutable_iteminfos();

  // @@protoc_insertion_point(class_scope:HPItemInfoSync)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ItemInfo > iteminfos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Item_2eproto();
  friend void protobuf_AssignDesc_Item_2eproto();
  friend void protobuf_ShutdownFile_Item_2eproto();

  void InitAsDefaultInstance();
  static HPItemInfoSync* default_instance_;
};
// ===================================================================


// ===================================================================

// ItemInfo

// required int32 id = 1;
inline bool ItemInfo::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ItemInfo::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ItemInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ItemInfo::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 ItemInfo::id() const {
  return id_;
}
inline void ItemInfo::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// required int32 itemId = 2;
inline bool ItemInfo::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ItemInfo::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ItemInfo::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ItemInfo::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 ItemInfo::itemid() const {
  return itemid_;
}
inline void ItemInfo::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// required int64 count = 3;
inline bool ItemInfo::has_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemInfo::set_has_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemInfo::clear_has_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemInfo::clear_count() {
  count_ = GOOGLE_LONGLONG(0);
  clear_has_count();
}
inline ::google::protobuf::int64 ItemInfo::count() const {
  return count_;
}
inline void ItemInfo::set_count(::google::protobuf::int64 value) {
  set_has_count();
  count_ = value;
}

// required int32 status = 4;
inline bool ItemInfo::has_status() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemInfo::set_has_status() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemInfo::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 ItemInfo::status() const {
  return status_;
}
inline void ItemInfo::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// optional int32 exp = 5;
inline bool ItemInfo::has_exp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ItemInfo::set_has_exp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ItemInfo::clear_has_exp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ItemInfo::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 ItemInfo::exp() const {
  return exp_;
}
inline void ItemInfo::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// -------------------------------------------------------------------

// HPItemInfoSync

// repeated .ItemInfo itemInfos = 1;
inline int HPItemInfoSync::iteminfos_size() const {
  return iteminfos_.size();
}
inline void HPItemInfoSync::clear_iteminfos() {
  iteminfos_.Clear();
}
inline const ::ItemInfo& HPItemInfoSync::iteminfos(int index) const {
  return iteminfos_.Get(index);
}
inline ::ItemInfo* HPItemInfoSync::mutable_iteminfos(int index) {
  return iteminfos_.Mutable(index);
}
inline ::ItemInfo* HPItemInfoSync::add_iteminfos() {
  return iteminfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ItemInfo >&
HPItemInfoSync::iteminfos() const {
  return iteminfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::ItemInfo >*
HPItemInfoSync::mutable_iteminfos() {
  return &iteminfos_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Item_2eproto__INCLUDED
