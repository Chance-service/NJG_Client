// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Player.proto

#ifndef PROTOBUF_Player_2eproto__INCLUDED
#define PROTOBUF_Player_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Attribute.pb.h"
#include "Equip.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Player_2eproto();
void protobuf_AssignDesc_Player_2eproto();
void protobuf_ShutdownFile_Player_2eproto();

class PlayerInfo;
class RoleEquip;
class RoleSkill;
class RoleElement;
class RoleInfo;
class HPPlayerInfoSync;
class HPRoleInfoSync;
class HPSysSetting;
class HPPlayerStateSync;
class HPPlayerKickout;
class HPRoleCreate;
class HPRoleCreateRet;
class HPAssembleFinish;
class HPChangeSignature;
class HPChangeSignatureRet;
class HPUserKickOut;
class HPDataNotify;
class HPEquipSyncFinish;
class HPRoleIncStarExp;
class HPRoleUpStage;
class HPRoleRingIncExp;
class RoleRingInfo;
class HPRoleRingInfoSync;
class HPRoleRingActive;
class EliteMapInfo;
class HPEliteMapInfoSync;
class HPEvaluateRewards;
class Params;
class HPClientSetting;
class HPPlayerAreaSync;
class HPChangeRoleName;
class HPChangeRoleNameRet;
class HPCommentMsg;
class HPCommentMsgRet;
class HPGoogleAchieveMsg;
class HPGoogleAchieveMsgRet;
class HPFacebookShareEvent;
class HPFacebookShareEventRet;
class HPFacebookShareCount;
class HPFacebookShareCountRet;
class HPPlayerBindPrice;
class HPPlayerBindPriceRet;

// ===================================================================

class PlayerInfo : public ::google::protobuf::Message {
 public:
  PlayerInfo();
  virtual ~PlayerInfo();

  PlayerInfo(const PlayerInfo& from);

  inline PlayerInfo& operator=(const PlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerInfo& default_instance();

  void Swap(PlayerInfo* other);

  // implements Message ----------------------------------------------

  PlayerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PlayerInfo& from);
  void MergeFrom(const PlayerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 playerId = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int32 playerid() const;
  inline void set_playerid(::google::protobuf::int32 value);

  // required int32 gold = 2;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 2;
  inline ::google::protobuf::int32 gold() const;
  inline void set_gold(::google::protobuf::int32 value);

  // required int64 coin = 3;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 3;
  inline ::google::protobuf::int64 coin() const;
  inline void set_coin(::google::protobuf::int64 value);

  // required int32 recharge = 4;
  inline bool has_recharge() const;
  inline void clear_recharge();
  static const int kRechargeFieldNumber = 4;
  inline ::google::protobuf::int32 recharge() const;
  inline void set_recharge(::google::protobuf::int32 value);

  // required int32 vipLevel = 5;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kVipLevelFieldNumber = 5;
  inline ::google::protobuf::int32 viplevel() const;
  inline void set_viplevel(::google::protobuf::int32 value);

  // required int32 smeltValue = 6;
  inline bool has_smeltvalue() const;
  inline void clear_smeltvalue();
  static const int kSmeltValueFieldNumber = 6;
  inline ::google::protobuf::int32 smeltvalue() const;
  inline void set_smeltvalue(::google::protobuf::int32 value);

  // optional string signature = 7;
  inline bool has_signature() const;
  inline void clear_signature();
  static const int kSignatureFieldNumber = 7;
  inline const ::std::string& signature() const;
  inline void set_signature(const ::std::string& value);
  inline void set_signature(const char* value);
  inline void set_signature(const char* value, size_t size);
  inline ::std::string* mutable_signature();
  inline ::std::string* release_signature();
  inline void set_allocated_signature(::std::string* signature);

  // optional int32 honorValue = 8;
  inline bool has_honorvalue() const;
  inline void clear_honorvalue();
  static const int kHonorValueFieldNumber = 8;
  inline ::google::protobuf::int32 honorvalue() const;
  inline void set_honorvalue(::google::protobuf::int32 value);

  // optional int32 reputationValue = 9;
  inline bool has_reputationvalue() const;
  inline void clear_reputationvalue();
  static const int kReputationValueFieldNumber = 9;
  inline ::google::protobuf::int32 reputationvalue() const;
  inline void set_reputationvalue(::google::protobuf::int32 value);

  // optional int32 monthCardLeftDay = 10;
  inline bool has_monthcardleftday() const;
  inline void clear_monthcardleftday();
  static const int kMonthCardLeftDayFieldNumber = 10;
  inline ::google::protobuf::int32 monthcardleftday() const;
  inline void set_monthcardleftday(::google::protobuf::int32 value);

  // optional int32 talentNum = 11;
  inline bool has_talentnum() const;
  inline void clear_talentnum();
  static const int kTalentNumFieldNumber = 11;
  inline ::google::protobuf::int32 talentnum() const;
  inline void set_talentnum(::google::protobuf::int32 value);

  // optional int32 facebookCount = 12;
  inline bool has_facebookcount() const;
  inline void clear_facebookcount();
  static const int kFacebookCountFieldNumber = 12;
  inline ::google::protobuf::int32 facebookcount() const;
  inline void set_facebookcount(::google::protobuf::int32 value);

  // optional int32 crystal = 13;
  inline bool has_crystal() const;
  inline void clear_crystal();
  static const int kCrystalFieldNumber = 13;
  inline ::google::protobuf::int32 crystal() const;
  inline void set_crystal(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PlayerInfo)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_recharge();
  inline void clear_has_recharge();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_smeltvalue();
  inline void clear_has_smeltvalue();
  inline void set_has_signature();
  inline void clear_has_signature();
  inline void set_has_honorvalue();
  inline void clear_has_honorvalue();
  inline void set_has_reputationvalue();
  inline void clear_has_reputationvalue();
  inline void set_has_monthcardleftday();
  inline void clear_has_monthcardleftday();
  inline void set_has_talentnum();
  inline void clear_has_talentnum();
  inline void set_has_facebookcount();
  inline void clear_has_facebookcount();
  inline void set_has_crystal();
  inline void clear_has_crystal();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 playerid_;
  ::google::protobuf::int32 gold_;
  ::google::protobuf::int64 coin_;
  ::google::protobuf::int32 recharge_;
  ::google::protobuf::int32 viplevel_;
  ::std::string* signature_;
  ::google::protobuf::int32 smeltvalue_;
  ::google::protobuf::int32 honorvalue_;
  ::google::protobuf::int32 reputationvalue_;
  ::google::protobuf::int32 monthcardleftday_;
  ::google::protobuf::int32 talentnum_;
  ::google::protobuf::int32 facebookcount_;
  ::google::protobuf::int32 crystal_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static PlayerInfo* default_instance_;
};
// -------------------------------------------------------------------

class RoleEquip : public ::google::protobuf::Message {
 public:
  RoleEquip();
  virtual ~RoleEquip();

  RoleEquip(const RoleEquip& from);

  inline RoleEquip& operator=(const RoleEquip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleEquip& default_instance();

  void Swap(RoleEquip* other);

  // implements Message ----------------------------------------------

  RoleEquip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleEquip& from);
  void MergeFrom(const RoleEquip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 part = 1;
  inline bool has_part() const;
  inline void clear_part();
  static const int kPartFieldNumber = 1;
  inline ::google::protobuf::int32 part() const;
  inline void set_part(::google::protobuf::int32 value);

  // required int64 equipId = 2;
  inline bool has_equipid() const;
  inline void clear_equipid();
  static const int kEquipIdFieldNumber = 2;
  inline ::google::protobuf::int64 equipid() const;
  inline void set_equipid(::google::protobuf::int64 value);

  // required int32 equipItemId = 3;
  inline bool has_equipitemid() const;
  inline void clear_equipitemid();
  static const int kEquipItemIdFieldNumber = 3;
  inline ::google::protobuf::int32 equipitemid() const;
  inline void set_equipitemid(::google::protobuf::int32 value);

  // required int32 strength = 4;
  inline bool has_strength() const;
  inline void clear_strength();
  static const int kStrengthFieldNumber = 4;
  inline ::google::protobuf::int32 strength() const;
  inline void set_strength(::google::protobuf::int32 value);

  // repeated .GemInfo gemInfo = 5;
  inline int geminfo_size() const;
  inline void clear_geminfo();
  static const int kGemInfoFieldNumber = 5;
  inline const ::GemInfo& geminfo(int index) const;
  inline ::GemInfo* mutable_geminfo(int index);
  inline ::GemInfo* add_geminfo();
  inline const ::google::protobuf::RepeatedPtrField< ::GemInfo >&
      geminfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::GemInfo >*
      mutable_geminfo();

  // @@protoc_insertion_point(class_scope:RoleEquip)
 private:
  inline void set_has_part();
  inline void clear_has_part();
  inline void set_has_equipid();
  inline void clear_has_equipid();
  inline void set_has_equipitemid();
  inline void clear_has_equipitemid();
  inline void set_has_strength();
  inline void clear_has_strength();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 equipid_;
  ::google::protobuf::int32 part_;
  ::google::protobuf::int32 equipitemid_;
  ::google::protobuf::RepeatedPtrField< ::GemInfo > geminfo_;
  ::google::protobuf::int32 strength_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static RoleEquip* default_instance_;
};
// -------------------------------------------------------------------

class RoleSkill : public ::google::protobuf::Message {
 public:
  RoleSkill();
  virtual ~RoleSkill();

  RoleSkill(const RoleSkill& from);

  inline RoleSkill& operator=(const RoleSkill& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleSkill& default_instance();

  void Swap(RoleSkill* other);

  // implements Message ----------------------------------------------

  RoleSkill* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleSkill& from);
  void MergeFrom(const RoleSkill& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 skillId = 1;
  inline bool has_skillid() const;
  inline void clear_skillid();
  static const int kSkillIdFieldNumber = 1;
  inline ::google::protobuf::int32 skillid() const;
  inline void set_skillid(::google::protobuf::int32 value);

  // optional int32 itemId = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // optional int32 level = 3 [default = 1];
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RoleSkill)
 private:
  inline void set_has_skillid();
  inline void clear_has_skillid();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 skillid_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 level_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static RoleSkill* default_instance_;
};
// -------------------------------------------------------------------

class RoleElement : public ::google::protobuf::Message {
 public:
  RoleElement();
  virtual ~RoleElement();

  RoleElement(const RoleElement& from);

  inline RoleElement& operator=(const RoleElement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleElement& default_instance();

  void Swap(RoleElement* other);

  // implements Message ----------------------------------------------

  RoleElement* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleElement& from);
  void MergeFrom(const RoleElement& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 index = 1;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // required int64 elementId = 2;
  inline bool has_elementid() const;
  inline void clear_elementid();
  static const int kElementIdFieldNumber = 2;
  inline ::google::protobuf::int64 elementid() const;
  inline void set_elementid(::google::protobuf::int64 value);

  // required int32 elementItemId = 3;
  inline bool has_elementitemid() const;
  inline void clear_elementitemid();
  static const int kElementItemIdFieldNumber = 3;
  inline ::google::protobuf::int32 elementitemid() const;
  inline void set_elementitemid(::google::protobuf::int32 value);

  // required int32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required int32 quality = 5;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 5;
  inline ::google::protobuf::int32 quality() const;
  inline void set_quality(::google::protobuf::int32 value);

  // required int32 type = 6;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 6;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RoleElement)
 private:
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_elementid();
  inline void clear_has_elementid();
  inline void set_has_elementitemid();
  inline void clear_has_elementitemid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 elementid_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 elementitemid_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static RoleElement* default_instance_;
};
// -------------------------------------------------------------------

class RoleInfo : public ::google::protobuf::Message {
 public:
  RoleInfo();
  virtual ~RoleInfo();

  RoleInfo(const RoleInfo& from);

  inline RoleInfo& operator=(const RoleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleInfo& default_instance();

  void Swap(RoleInfo* other);

  // implements Message ----------------------------------------------

  RoleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleInfo& from);
  void MergeFrom(const RoleInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleId = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // required int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 itemId = 3;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 3;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // required int32 prof = 4;
  inline bool has_prof() const;
  inline void clear_prof();
  static const int kProfFieldNumber = 4;
  inline ::google::protobuf::int32 prof() const;
  inline void set_prof(::google::protobuf::int32 value);

  // required string name = 5;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 5;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required int32 level = 6;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 6;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required int64 exp = 7;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 7;
  inline ::google::protobuf::int64 exp() const;
  inline void set_exp(::google::protobuf::int64 value);

  // required int32 fight = 8;
  inline bool has_fight() const;
  inline void clear_fight();
  static const int kFightFieldNumber = 8;
  inline ::google::protobuf::int32 fight() const;
  inline void set_fight(::google::protobuf::int32 value);

  // required int32 status = 9;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 9;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // repeated .RoleEquip equips = 10;
  inline int equips_size() const;
  inline void clear_equips();
  static const int kEquipsFieldNumber = 10;
  inline const ::RoleEquip& equips(int index) const;
  inline ::RoleEquip* mutable_equips(int index);
  inline ::RoleEquip* add_equips();
  inline const ::google::protobuf::RepeatedPtrField< ::RoleEquip >&
      equips() const;
  inline ::google::protobuf::RepeatedPtrField< ::RoleEquip >*
      mutable_equips();

  // repeated .RoleSkill skills = 11;
  inline int skills_size() const;
  inline void clear_skills();
  static const int kSkillsFieldNumber = 11;
  inline const ::RoleSkill& skills(int index) const;
  inline ::RoleSkill* mutable_skills(int index);
  inline ::RoleSkill* add_skills();
  inline const ::google::protobuf::RepeatedPtrField< ::RoleSkill >&
      skills() const;
  inline ::google::protobuf::RepeatedPtrField< ::RoleSkill >*
      mutable_skills();

  // required .AttrInfo attribute = 12;
  inline bool has_attribute() const;
  inline void clear_attribute();
  static const int kAttributeFieldNumber = 12;
  inline const ::AttrInfo& attribute() const;
  inline ::AttrInfo* mutable_attribute();
  inline ::AttrInfo* release_attribute();
  inline void set_allocated_attribute(::AttrInfo* attribute);

  // optional .AttrInfo baptizeAttr = 13;
  inline bool has_baptizeattr() const;
  inline void clear_baptizeattr();
  static const int kBaptizeAttrFieldNumber = 13;
  inline const ::AttrInfo& baptizeattr() const;
  inline ::AttrInfo* mutable_baptizeattr();
  inline ::AttrInfo* release_baptizeattr();
  inline void set_allocated_baptizeattr(::AttrInfo* baptizeattr);

  // optional .AttrInfo baseAttr = 14;
  inline bool has_baseattr() const;
  inline void clear_baseattr();
  static const int kBaseAttrFieldNumber = 14;
  inline const ::AttrInfo& baseattr() const;
  inline ::AttrInfo* mutable_baseattr();
  inline ::AttrInfo* release_baseattr();
  inline void set_allocated_baseattr(::AttrInfo* baseattr);

  // repeated .RoleSkill skills2 = 15;
  inline int skills2_size() const;
  inline void clear_skills2();
  static const int kSkills2FieldNumber = 15;
  inline const ::RoleSkill& skills2(int index) const;
  inline ::RoleSkill* mutable_skills2(int index);
  inline ::RoleSkill* add_skills2();
  inline const ::google::protobuf::RepeatedPtrField< ::RoleSkill >&
      skills2() const;
  inline ::google::protobuf::RepeatedPtrField< ::RoleSkill >*
      mutable_skills2();

  // repeated .RoleSkill skills3 = 16;
  inline int skills3_size() const;
  inline void clear_skills3();
  static const int kSkills3FieldNumber = 16;
  inline const ::RoleSkill& skills3(int index) const;
  inline ::RoleSkill* mutable_skills3(int index);
  inline ::RoleSkill* add_skills3();
  inline const ::google::protobuf::RepeatedPtrField< ::RoleSkill >&
      skills3() const;
  inline ::google::protobuf::RepeatedPtrField< ::RoleSkill >*
      mutable_skills3();

  // optional int32 starLevel = 17;
  inline bool has_starlevel() const;
  inline void clear_starlevel();
  static const int kStarLevelFieldNumber = 17;
  inline ::google::protobuf::int32 starlevel() const;
  inline void set_starlevel(::google::protobuf::int32 value);

  // optional int32 starExp = 18;
  inline bool has_starexp() const;
  inline void clear_starexp();
  static const int kStarExpFieldNumber = 18;
  inline ::google::protobuf::int32 starexp() const;
  inline void set_starexp(::google::protobuf::int32 value);

  // repeated .RoleElement elements = 19;
  inline int elements_size() const;
  inline void clear_elements();
  static const int kElementsFieldNumber = 19;
  inline const ::RoleElement& elements(int index) const;
  inline ::RoleElement* mutable_elements(int index);
  inline ::RoleElement* add_elements();
  inline const ::google::protobuf::RepeatedPtrField< ::RoleElement >&
      elements() const;
  inline ::google::protobuf::RepeatedPtrField< ::RoleElement >*
      mutable_elements();

  // optional int32 rebirthStage = 20;
  inline bool has_rebirthstage() const;
  inline void clear_rebirthstage();
  static const int kRebirthStageFieldNumber = 20;
  inline ::google::protobuf::int32 rebirthstage() const;
  inline void set_rebirthstage(::google::protobuf::int32 value);

  // optional int32 stageLevel = 21;
  inline bool has_stagelevel() const;
  inline void clear_stagelevel();
  static const int kStageLevelFieldNumber = 21;
  inline ::google::protobuf::int32 stagelevel() const;
  inline void set_stagelevel(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RoleInfo)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_prof();
  inline void clear_has_prof();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_fight();
  inline void clear_has_fight();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_attribute();
  inline void clear_has_attribute();
  inline void set_has_baptizeattr();
  inline void clear_has_baptizeattr();
  inline void set_has_baseattr();
  inline void clear_has_baseattr();
  inline void set_has_starlevel();
  inline void clear_has_starlevel();
  inline void set_has_starexp();
  inline void clear_has_starexp();
  inline void set_has_rebirthstage();
  inline void clear_has_rebirthstage();
  inline void set_has_stagelevel();
  inline void clear_has_stagelevel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 prof_;
  ::std::string* name_;
  ::google::protobuf::int64 exp_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 fight_;
  ::google::protobuf::RepeatedPtrField< ::RoleEquip > equips_;
  ::google::protobuf::RepeatedPtrField< ::RoleSkill > skills_;
  ::AttrInfo* attribute_;
  ::AttrInfo* baptizeattr_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 starlevel_;
  ::AttrInfo* baseattr_;
  ::google::protobuf::RepeatedPtrField< ::RoleSkill > skills2_;
  ::google::protobuf::RepeatedPtrField< ::RoleSkill > skills3_;
  ::google::protobuf::RepeatedPtrField< ::RoleElement > elements_;
  ::google::protobuf::int32 starexp_;
  ::google::protobuf::int32 rebirthstage_;
  ::google::protobuf::int32 stagelevel_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(21 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static RoleInfo* default_instance_;
};
// -------------------------------------------------------------------

class HPPlayerInfoSync : public ::google::protobuf::Message {
 public:
  HPPlayerInfoSync();
  virtual ~HPPlayerInfoSync();

  HPPlayerInfoSync(const HPPlayerInfoSync& from);

  inline HPPlayerInfoSync& operator=(const HPPlayerInfoSync& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPPlayerInfoSync& default_instance();

  void Swap(HPPlayerInfoSync* other);

  // implements Message ----------------------------------------------

  HPPlayerInfoSync* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPPlayerInfoSync& from);
  void MergeFrom(const HPPlayerInfoSync& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PlayerInfo playerInfos = 1;
  inline int playerinfos_size() const;
  inline void clear_playerinfos();
  static const int kPlayerInfosFieldNumber = 1;
  inline const ::PlayerInfo& playerinfos(int index) const;
  inline ::PlayerInfo* mutable_playerinfos(int index);
  inline ::PlayerInfo* add_playerinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::PlayerInfo >&
      playerinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::PlayerInfo >*
      mutable_playerinfos();

  // @@protoc_insertion_point(class_scope:HPPlayerInfoSync)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::PlayerInfo > playerinfos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static HPPlayerInfoSync* default_instance_;
};
// -------------------------------------------------------------------

class HPRoleInfoSync : public ::google::protobuf::Message {
 public:
  HPRoleInfoSync();
  virtual ~HPRoleInfoSync();

  HPRoleInfoSync(const HPRoleInfoSync& from);

  inline HPRoleInfoSync& operator=(const HPRoleInfoSync& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPRoleInfoSync& default_instance();

  void Swap(HPRoleInfoSync* other);

  // implements Message ----------------------------------------------

  HPRoleInfoSync* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPRoleInfoSync& from);
  void MergeFrom(const HPRoleInfoSync& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .RoleInfo roleInfos = 1;
  inline int roleinfos_size() const;
  inline void clear_roleinfos();
  static const int kRoleInfosFieldNumber = 1;
  inline const ::RoleInfo& roleinfos(int index) const;
  inline ::RoleInfo* mutable_roleinfos(int index);
  inline ::RoleInfo* add_roleinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::RoleInfo >&
      roleinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::RoleInfo >*
      mutable_roleinfos();

  // @@protoc_insertion_point(class_scope:HPRoleInfoSync)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::RoleInfo > roleinfos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static HPRoleInfoSync* default_instance_;
};
// -------------------------------------------------------------------

class HPSysSetting : public ::google::protobuf::Message {
 public:
  HPSysSetting();
  virtual ~HPSysSetting();

  HPSysSetting(const HPSysSetting& from);

  inline HPSysSetting& operator=(const HPSysSetting& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPSysSetting& default_instance();

  void Swap(HPSysSetting* other);

  // implements Message ----------------------------------------------

  HPSysSetting* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPSysSetting& from);
  void MergeFrom(const HPSysSetting& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 autoSellEquip = 1;
  inline bool has_autosellequip() const;
  inline void clear_autosellequip();
  static const int kAutoSellEquipFieldNumber = 1;
  inline ::google::protobuf::int32 autosellequip() const;
  inline void set_autosellequip(::google::protobuf::int32 value);

  // optional int32 chatClose = 2;
  inline bool has_chatclose() const;
  inline void clear_chatclose();
  static const int kChatCloseFieldNumber = 2;
  inline ::google::protobuf::int32 chatclose() const;
  inline void set_chatclose(::google::protobuf::int32 value);

  // optional int32 wipeBoss = 3;
  inline bool has_wipeboss() const;
  inline void clear_wipeboss();
  static const int kWipeBossFieldNumber = 3;
  inline ::google::protobuf::int32 wipeboss() const;
  inline void set_wipeboss(::google::protobuf::int32 value);

  // optional int32 musicOn = 4;
  inline bool has_musicon() const;
  inline void clear_musicon();
  static const int kMusicOnFieldNumber = 4;
  inline ::google::protobuf::int32 musicon() const;
  inline void set_musicon(::google::protobuf::int32 value);

  // optional int32 soundOn = 5;
  inline bool has_soundon() const;
  inline void clear_soundon();
  static const int kSoundOnFieldNumber = 5;
  inline ::google::protobuf::int32 soundon() const;
  inline void set_soundon(::google::protobuf::int32 value);

  // optional int32 showArea = 6;
  inline bool has_showarea() const;
  inline void clear_showarea();
  static const int kShowAreaFieldNumber = 6;
  inline ::google::protobuf::int32 showarea() const;
  inline void set_showarea(::google::protobuf::int32 value);

  // optional int32 onlyText = 7;
  inline bool has_onlytext() const;
  inline void clear_onlytext();
  static const int kOnlyTextFieldNumber = 7;
  inline ::google::protobuf::int32 onlytext() const;
  inline void set_onlytext(::google::protobuf::int32 value);

  // optional int32 autoDecoElement = 8;
  inline bool has_autodecoelement() const;
  inline void clear_autodecoelement();
  static const int kAutoDecoElementFieldNumber = 8;
  inline ::google::protobuf::int32 autodecoelement() const;
  inline void set_autodecoelement(::google::protobuf::int32 value);

  // optional int32 fontSize = 9;
  inline bool has_fontsize() const;
  inline void clear_fontsize();
  static const int kFontSizeFieldNumber = 9;
  inline ::google::protobuf::int32 fontsize() const;
  inline void set_fontsize(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HPSysSetting)
 private:
  inline void set_has_autosellequip();
  inline void clear_has_autosellequip();
  inline void set_has_chatclose();
  inline void clear_has_chatclose();
  inline void set_has_wipeboss();
  inline void clear_has_wipeboss();
  inline void set_has_musicon();
  inline void clear_has_musicon();
  inline void set_has_soundon();
  inline void clear_has_soundon();
  inline void set_has_showarea();
  inline void clear_has_showarea();
  inline void set_has_onlytext();
  inline void clear_has_onlytext();
  inline void set_has_autodecoelement();
  inline void clear_has_autodecoelement();
  inline void set_has_fontsize();
  inline void clear_has_fontsize();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 autosellequip_;
  ::google::protobuf::int32 chatclose_;
  ::google::protobuf::int32 wipeboss_;
  ::google::protobuf::int32 musicon_;
  ::google::protobuf::int32 soundon_;
  ::google::protobuf::int32 showarea_;
  ::google::protobuf::int32 onlytext_;
  ::google::protobuf::int32 autodecoelement_;
  ::google::protobuf::int32 fontsize_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static HPSysSetting* default_instance_;
};
// -------------------------------------------------------------------

class HPPlayerStateSync : public ::google::protobuf::Message {
 public:
  HPPlayerStateSync();
  virtual ~HPPlayerStateSync();

  HPPlayerStateSync(const HPPlayerStateSync& from);

  inline HPPlayerStateSync& operator=(const HPPlayerStateSync& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPPlayerStateSync& default_instance();

  void Swap(HPPlayerStateSync* other);

  // implements Message ----------------------------------------------

  HPPlayerStateSync* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPPlayerStateSync& from);
  void MergeFrom(const HPPlayerStateSync& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 buyCoinTimes = 1;
  inline bool has_buycointimes() const;
  inline void clear_buycointimes();
  static const int kBuyCoinTimesFieldNumber = 1;
  inline ::google::protobuf::int32 buycointimes() const;
  inline void set_buycointimes(::google::protobuf::int32 value);

  // optional int32 currentEquipBagSize = 2;
  inline bool has_currentequipbagsize() const;
  inline void clear_currentequipbagsize();
  static const int kCurrentEquipBagSizeFieldNumber = 2;
  inline ::google::protobuf::int32 currentequipbagsize() const;
  inline void set_currentequipbagsize(::google::protobuf::int32 value);

  // optional int32 leftEquipBagExtendTimes = 3;
  inline bool has_leftequipbagextendtimes() const;
  inline void clear_leftequipbagextendtimes();
  static const int kLeftEquipBagExtendTimesFieldNumber = 3;
  inline ::google::protobuf::int32 leftequipbagextendtimes() const;
  inline void set_leftequipbagextendtimes(::google::protobuf::int32 value);

  // optional int32 autoSellEquip = 4;
  inline bool has_autosellequip() const;
  inline void clear_autosellequip();
  static const int kAutoSellEquipFieldNumber = 4;
  inline ::google::protobuf::int32 autosellequip() const;
  inline void set_autosellequip(::google::protobuf::int32 value);

  // optional int32 chatClose = 5;
  inline bool has_chatclose() const;
  inline void clear_chatclose();
  static const int kChatCloseFieldNumber = 5;
  inline ::google::protobuf::int32 chatclose() const;
  inline void set_chatclose(::google::protobuf::int32 value);

  // optional int32 fastFightTimes = 6;
  inline bool has_fastfighttimes() const;
  inline void clear_fastfighttimes();
  static const int kFastFightTimesFieldNumber = 6;
  inline ::google::protobuf::int32 fastfighttimes() const;
  inline void set_fastfighttimes(::google::protobuf::int32 value);

  // optional int32 fastFightBuyTimes = 7;
  inline bool has_fastfightbuytimes() const;
  inline void clear_fastfightbuytimes();
  static const int kFastFightBuyTimesFieldNumber = 7;
  inline ::google::protobuf::int32 fastfightbuytimes() const;
  inline void set_fastfightbuytimes(::google::protobuf::int32 value);

  // optional int32 bossFightTimes = 8;
  inline bool has_bossfighttimes() const;
  inline void clear_bossfighttimes();
  static const int kBossFightTimesFieldNumber = 8;
  inline ::google::protobuf::int32 bossfighttimes() const;
  inline void set_bossfighttimes(::google::protobuf::int32 value);

  // optional int32 bossFightBuyTimes = 9;
  inline bool has_bossfightbuytimes() const;
  inline void clear_bossfightbuytimes();
  static const int kBossFightBuyTimesFieldNumber = 9;
  inline ::google::protobuf::int32 bossfightbuytimes() const;
  inline void set_bossfightbuytimes(::google::protobuf::int32 value);

  // optional int32 nextBattleTime = 10;
  inline bool has_nextbattletime() const;
  inline void clear_nextbattletime();
  static const int kNextBattleTimeFieldNumber = 10;
  inline ::google::protobuf::int32 nextbattletime() const;
  inline void set_nextbattletime(::google::protobuf::int32 value);

  // optional int32 curBattleMap = 11;
  inline bool has_curbattlemap() const;
  inline void clear_curbattlemap();
  static const int kCurBattleMapFieldNumber = 11;
  inline ::google::protobuf::int32 curbattlemap() const;
  inline void set_curbattlemap(::google::protobuf::int32 value);

  // optional int32 passMapId = 12;
  inline bool has_passmapid() const;
  inline void clear_passmapid();
  static const int kPassMapIdFieldNumber = 12;
  inline ::google::protobuf::int32 passmapid() const;
  inline void set_passmapid(::google::protobuf::int32 value);

  // optional int32 giftStatus = 13;
  inline bool has_giftstatus() const;
  inline void clear_giftstatus();
  static const int kGiftStatusFieldNumber = 13;
  inline ::google::protobuf::int32 giftstatus() const;
  inline void set_giftstatus(::google::protobuf::int32 value);

  // optional int32 bossWipe = 14;
  inline bool has_bosswipe() const;
  inline void clear_bosswipe();
  static const int kBossWipeFieldNumber = 14;
  inline ::google::protobuf::int32 bosswipe() const;
  inline void set_bosswipe(::google::protobuf::int32 value);

  // optional int32 equipSmeltRefesh = 15;
  inline bool has_equipsmeltrefesh() const;
  inline void clear_equipsmeltrefesh();
  static const int kEquipSmeltRefeshFieldNumber = 15;
  inline ::google::protobuf::int32 equipsmeltrefesh() const;
  inline void set_equipsmeltrefesh(::google::protobuf::int32 value);

  // optional int32 gongceCompleteDays = 16;
  inline bool has_gongcecompletedays() const;
  inline void clear_gongcecompletedays();
  static const int kGongceCompleteDaysFieldNumber = 16;
  inline ::google::protobuf::int32 gongcecompletedays() const;
  inline void set_gongcecompletedays(::google::protobuf::int32 value);

  // optional int32 musicOn = 17;
  inline bool has_musicon() const;
  inline void clear_musicon();
  static const int kMusicOnFieldNumber = 17;
  inline ::google::protobuf::int32 musicon() const;
  inline void set_musicon(::google::protobuf::int32 value);

  // optional int32 soundOn = 18;
  inline bool has_soundon() const;
  inline void clear_soundon();
  static const int kSoundOnFieldNumber = 18;
  inline ::google::protobuf::int32 soundon() const;
  inline void set_soundon(::google::protobuf::int32 value);

  // optional int32 showArea = 19;
  inline bool has_showarea() const;
  inline void clear_showarea();
  static const int kShowAreaFieldNumber = 19;
  inline ::google::protobuf::int32 showarea() const;
  inline void set_showarea(::google::protobuf::int32 value);

  // optional int32 passEliteMapId = 20;
  inline bool has_passelitemapid() const;
  inline void clear_passelitemapid();
  static const int kPassEliteMapIdFieldNumber = 20;
  inline ::google::protobuf::int32 passelitemapid() const;
  inline void set_passelitemapid(::google::protobuf::int32 value);

  // optional int32 starStoneTimes = 21;
  inline bool has_starstonetimes() const;
  inline void clear_starstonetimes();
  static const int kStarStoneTimesFieldNumber = 21;
  inline ::google::protobuf::int32 starstonetimes() const;
  inline void set_starstonetimes(::google::protobuf::int32 value);

  // optional int32 eliteFightTimes = 22;
  inline bool has_elitefighttimes() const;
  inline void clear_elitefighttimes();
  static const int kEliteFightTimesFieldNumber = 22;
  inline ::google::protobuf::int32 elitefighttimes() const;
  inline void set_elitefighttimes(::google::protobuf::int32 value);

  // optional int32 eliteFightBuyTimes = 23;
  inline bool has_elitefightbuytimes() const;
  inline void clear_elitefightbuytimes();
  static const int kEliteFightBuyTimesFieldNumber = 23;
  inline ::google::protobuf::int32 elitefightbuytimes() const;
  inline void set_elitefightbuytimes(::google::protobuf::int32 value);

  // optional int32 newGuideState = 24;
  inline bool has_newguidestate() const;
  inline void clear_newguidestate();
  static const int kNewGuideStateFieldNumber = 24;
  inline ::google::protobuf::int32 newguidestate() const;
  inline void set_newguidestate(::google::protobuf::int32 value);

  // optional int32 onlyText = 25;
  inline bool has_onlytext() const;
  inline void clear_onlytext();
  static const int kOnlyTextFieldNumber = 25;
  inline ::google::protobuf::int32 onlytext() const;
  inline void set_onlytext(::google::protobuf::int32 value);

  // optional bool isCSOPen = 26;
  inline bool has_iscsopen() const;
  inline void clear_iscsopen();
  static const int kIsCSOPenFieldNumber = 26;
  inline bool iscsopen() const;
  inline void set_iscsopen(bool value);

  // optional int32 multiEliteTimes = 27;
  inline bool has_multielitetimes() const;
  inline void clear_multielitetimes();
  static const int kMultiEliteTimesFieldNumber = 27;
  inline ::google::protobuf::int32 multielitetimes() const;
  inline void set_multielitetimes(::google::protobuf::int32 value);

  // optional int32 elementBagSize = 28;
  inline bool has_elementbagsize() const;
  inline void clear_elementbagsize();
  static const int kElementBagSizeFieldNumber = 28;
  inline ::google::protobuf::int32 elementbagsize() const;
  inline void set_elementbagsize(::google::protobuf::int32 value);

  // optional bool isFirstLogin = 29;
  inline bool has_isfirstlogin() const;
  inline void clear_isfirstlogin();
  static const int kIsFirstLoginFieldNumber = 29;
  inline bool isfirstlogin() const;
  inline void set_isfirstlogin(bool value);

  // optional int32 newBattleMap = 30;
  inline bool has_newbattlemap() const;
  inline void clear_newbattlemap();
  static const int kNewBattleMapFieldNumber = 30;
  inline ::google::protobuf::int32 newbattlemap() const;
  inline void set_newbattlemap(::google::protobuf::int32 value);

  // optional int32 autoDecoElement = 31;
  inline bool has_autodecoelement() const;
  inline void clear_autodecoelement();
  static const int kAutoDecoElementFieldNumber = 31;
  inline ::google::protobuf::int32 autodecoelement() const;
  inline void set_autodecoelement(::google::protobuf::int32 value);

  // optional int32 fontSize = 32;
  inline bool has_fontsize() const;
  inline void clear_fontsize();
  static const int kFontSizeFieldNumber = 32;
  inline ::google::protobuf::int32 fontsize() const;
  inline void set_fontsize(::google::protobuf::int32 value);

  // optional int32 hourCardUseCountOneDay = 33;
  inline bool has_hourcardusecountoneday() const;
  inline void clear_hourcardusecountoneday();
  static const int kHourCardUseCountOneDayFieldNumber = 33;
  inline ::google::protobuf::int32 hourcardusecountoneday() const;
  inline void set_hourcardusecountoneday(::google::protobuf::int32 value);

  // optional int32 leftFreeFastFightTimes = 34;
  inline bool has_leftfreefastfighttimes() const;
  inline void clear_leftfreefastfighttimes();
  static const int kLeftFreeFastFightTimesFieldNumber = 34;
  inline ::google::protobuf::int32 leftfreefastfighttimes() const;
  inline void set_leftfreefastfighttimes(::google::protobuf::int32 value);

  // optional int32 leftFreeRefreshShopTimes = 35;
  inline bool has_leftfreerefreshshoptimes() const;
  inline void clear_leftfreerefreshshoptimes();
  static const int kLeftFreeRefreshShopTimesFieldNumber = 35;
  inline ::google::protobuf::int32 leftfreerefreshshoptimes() const;
  inline void set_leftfreerefreshshoptimes(::google::protobuf::int32 value);

  // optional int32 leftFreeRefreshMakeEquipTimes = 36;
  inline bool has_leftfreerefreshmakeequiptimes() const;
  inline void clear_leftfreerefreshmakeequiptimes();
  static const int kLeftFreeRefreshMakeEquipTimesFieldNumber = 36;
  inline ::google::protobuf::int32 leftfreerefreshmakeequiptimes() const;
  inline void set_leftfreerefreshmakeequiptimes(::google::protobuf::int32 value);

  // optional int32 gemShopBuyCount = 37;
  inline bool has_gemshopbuycount() const;
  inline void clear_gemshopbuycount();
  static const int kGemShopBuyCountFieldNumber = 37;
  inline ::google::protobuf::int32 gemshopbuycount() const;
  inline void set_gemshopbuycount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HPPlayerStateSync)
 private:
  inline void set_has_buycointimes();
  inline void clear_has_buycointimes();
  inline void set_has_currentequipbagsize();
  inline void clear_has_currentequipbagsize();
  inline void set_has_leftequipbagextendtimes();
  inline void clear_has_leftequipbagextendtimes();
  inline void set_has_autosellequip();
  inline void clear_has_autosellequip();
  inline void set_has_chatclose();
  inline void clear_has_chatclose();
  inline void set_has_fastfighttimes();
  inline void clear_has_fastfighttimes();
  inline void set_has_fastfightbuytimes();
  inline void clear_has_fastfightbuytimes();
  inline void set_has_bossfighttimes();
  inline void clear_has_bossfighttimes();
  inline void set_has_bossfightbuytimes();
  inline void clear_has_bossfightbuytimes();
  inline void set_has_nextbattletime();
  inline void clear_has_nextbattletime();
  inline void set_has_curbattlemap();
  inline void clear_has_curbattlemap();
  inline void set_has_passmapid();
  inline void clear_has_passmapid();
  inline void set_has_giftstatus();
  inline void clear_has_giftstatus();
  inline void set_has_bosswipe();
  inline void clear_has_bosswipe();
  inline void set_has_equipsmeltrefesh();
  inline void clear_has_equipsmeltrefesh();
  inline void set_has_gongcecompletedays();
  inline void clear_has_gongcecompletedays();
  inline void set_has_musicon();
  inline void clear_has_musicon();
  inline void set_has_soundon();
  inline void clear_has_soundon();
  inline void set_has_showarea();
  inline void clear_has_showarea();
  inline void set_has_passelitemapid();
  inline void clear_has_passelitemapid();
  inline void set_has_starstonetimes();
  inline void clear_has_starstonetimes();
  inline void set_has_elitefighttimes();
  inline void clear_has_elitefighttimes();
  inline void set_has_elitefightbuytimes();
  inline void clear_has_elitefightbuytimes();
  inline void set_has_newguidestate();
  inline void clear_has_newguidestate();
  inline void set_has_onlytext();
  inline void clear_has_onlytext();
  inline void set_has_iscsopen();
  inline void clear_has_iscsopen();
  inline void set_has_multielitetimes();
  inline void clear_has_multielitetimes();
  inline void set_has_elementbagsize();
  inline void clear_has_elementbagsize();
  inline void set_has_isfirstlogin();
  inline void clear_has_isfirstlogin();
  inline void set_has_newbattlemap();
  inline void clear_has_newbattlemap();
  inline void set_has_autodecoelement();
  inline void clear_has_autodecoelement();
  inline void set_has_fontsize();
  inline void clear_has_fontsize();
  inline void set_has_hourcardusecountoneday();
  inline void clear_has_hourcardusecountoneday();
  inline void set_has_leftfreefastfighttimes();
  inline void clear_has_leftfreefastfighttimes();
  inline void set_has_leftfreerefreshshoptimes();
  inline void clear_has_leftfreerefreshshoptimes();
  inline void set_has_leftfreerefreshmakeequiptimes();
  inline void clear_has_leftfreerefreshmakeequiptimes();
  inline void set_has_gemshopbuycount();
  inline void clear_has_gemshopbuycount();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 buycointimes_;
  ::google::protobuf::int32 currentequipbagsize_;
  ::google::protobuf::int32 leftequipbagextendtimes_;
  ::google::protobuf::int32 autosellequip_;
  ::google::protobuf::int32 chatclose_;
  ::google::protobuf::int32 fastfighttimes_;
  ::google::protobuf::int32 fastfightbuytimes_;
  ::google::protobuf::int32 bossfighttimes_;
  ::google::protobuf::int32 bossfightbuytimes_;
  ::google::protobuf::int32 nextbattletime_;
  ::google::protobuf::int32 curbattlemap_;
  ::google::protobuf::int32 passmapid_;
  ::google::protobuf::int32 giftstatus_;
  ::google::protobuf::int32 bosswipe_;
  ::google::protobuf::int32 equipsmeltrefesh_;
  ::google::protobuf::int32 gongcecompletedays_;
  ::google::protobuf::int32 musicon_;
  ::google::protobuf::int32 soundon_;
  ::google::protobuf::int32 showarea_;
  ::google::protobuf::int32 passelitemapid_;
  ::google::protobuf::int32 starstonetimes_;
  ::google::protobuf::int32 elitefighttimes_;
  ::google::protobuf::int32 elitefightbuytimes_;
  ::google::protobuf::int32 newguidestate_;
  ::google::protobuf::int32 onlytext_;
  ::google::protobuf::int32 multielitetimes_;
  bool iscsopen_;
  bool isfirstlogin_;
  ::google::protobuf::int32 elementbagsize_;
  ::google::protobuf::int32 newbattlemap_;
  ::google::protobuf::int32 autodecoelement_;
  ::google::protobuf::int32 fontsize_;
  ::google::protobuf::int32 hourcardusecountoneday_;
  ::google::protobuf::int32 leftfreefastfighttimes_;
  ::google::protobuf::int32 leftfreerefreshshoptimes_;
  ::google::protobuf::int32 leftfreerefreshmakeequiptimes_;
  ::google::protobuf::int32 gemshopbuycount_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(37 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static HPPlayerStateSync* default_instance_;
};
// -------------------------------------------------------------------

class HPPlayerKickout : public ::google::protobuf::Message {
 public:
  HPPlayerKickout();
  virtual ~HPPlayerKickout();

  HPPlayerKickout(const HPPlayerKickout& from);

  inline HPPlayerKickout& operator=(const HPPlayerKickout& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPPlayerKickout& default_instance();

  void Swap(HPPlayerKickout* other);

  // implements Message ----------------------------------------------

  HPPlayerKickout* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPPlayerKickout& from);
  void MergeFrom(const HPPlayerKickout& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 reason = 1;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 1;
  inline ::google::protobuf::int32 reason() const;
  inline void set_reason(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HPPlayerKickout)
 private:
  inline void set_has_reason();
  inline void clear_has_reason();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 reason_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static HPPlayerKickout* default_instance_;
};
// -------------------------------------------------------------------

class HPRoleCreate : public ::google::protobuf::Message {
 public:
  HPRoleCreate();
  virtual ~HPRoleCreate();

  HPRoleCreate(const HPRoleCreate& from);

  inline HPRoleCreate& operator=(const HPRoleCreate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPRoleCreate& default_instance();

  void Swap(HPRoleCreate* other);

  // implements Message ----------------------------------------------

  HPRoleCreate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPRoleCreate& from);
  void MergeFrom(const HPRoleCreate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleItemId = 1;
  inline bool has_roleitemid() const;
  inline void clear_roleitemid();
  static const int kRoleItemIdFieldNumber = 1;
  inline ::google::protobuf::int32 roleitemid() const;
  inline void set_roleitemid(::google::protobuf::int32 value);

  // required string roleName = 2;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRoleNameFieldNumber = 2;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  inline ::std::string* release_rolename();
  inline void set_allocated_rolename(::std::string* rolename);

  // @@protoc_insertion_point(class_scope:HPRoleCreate)
 private:
  inline void set_has_roleitemid();
  inline void clear_has_roleitemid();
  inline void set_has_rolename();
  inline void clear_has_rolename();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* rolename_;
  ::google::protobuf::int32 roleitemid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static HPRoleCreate* default_instance_;
};
// -------------------------------------------------------------------

class HPRoleCreateRet : public ::google::protobuf::Message {
 public:
  HPRoleCreateRet();
  virtual ~HPRoleCreateRet();

  HPRoleCreateRet(const HPRoleCreateRet& from);

  inline HPRoleCreateRet& operator=(const HPRoleCreateRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPRoleCreateRet& default_instance();

  void Swap(HPRoleCreateRet* other);

  // implements Message ----------------------------------------------

  HPRoleCreateRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPRoleCreateRet& from);
  void MergeFrom(const HPRoleCreateRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // optional .RoleInfo roleInfo = 2;
  inline bool has_roleinfo() const;
  inline void clear_roleinfo();
  static const int kRoleInfoFieldNumber = 2;
  inline const ::RoleInfo& roleinfo() const;
  inline ::RoleInfo* mutable_roleinfo();
  inline ::RoleInfo* release_roleinfo();
  inline void set_allocated_roleinfo(::RoleInfo* roleinfo);

  // @@protoc_insertion_point(class_scope:HPRoleCreateRet)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_roleinfo();
  inline void clear_has_roleinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::RoleInfo* roleinfo_;
  ::google::protobuf::int32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static HPRoleCreateRet* default_instance_;
};
// -------------------------------------------------------------------

class HPAssembleFinish : public ::google::protobuf::Message {
 public:
  HPAssembleFinish();
  virtual ~HPAssembleFinish();

  HPAssembleFinish(const HPAssembleFinish& from);

  inline HPAssembleFinish& operator=(const HPAssembleFinish& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPAssembleFinish& default_instance();

  void Swap(HPAssembleFinish* other);

  // implements Message ----------------------------------------------

  HPAssembleFinish* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPAssembleFinish& from);
  void MergeFrom(const HPAssembleFinish& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 playerId = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int32 playerid() const;
  inline void set_playerid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HPAssembleFinish)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 playerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static HPAssembleFinish* default_instance_;
};
// -------------------------------------------------------------------

class HPChangeSignature : public ::google::protobuf::Message {
 public:
  HPChangeSignature();
  virtual ~HPChangeSignature();

  HPChangeSignature(const HPChangeSignature& from);

  inline HPChangeSignature& operator=(const HPChangeSignature& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPChangeSignature& default_instance();

  void Swap(HPChangeSignature* other);

  // implements Message ----------------------------------------------

  HPChangeSignature* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPChangeSignature& from);
  void MergeFrom(const HPChangeSignature& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string signature = 1;
  inline bool has_signature() const;
  inline void clear_signature();
  static const int kSignatureFieldNumber = 1;
  inline const ::std::string& signature() const;
  inline void set_signature(const ::std::string& value);
  inline void set_signature(const char* value);
  inline void set_signature(const char* value, size_t size);
  inline ::std::string* mutable_signature();
  inline ::std::string* release_signature();
  inline void set_allocated_signature(::std::string* signature);

  // @@protoc_insertion_point(class_scope:HPChangeSignature)
 private:
  inline void set_has_signature();
  inline void clear_has_signature();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* signature_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static HPChangeSignature* default_instance_;
};
// -------------------------------------------------------------------

class HPChangeSignatureRet : public ::google::protobuf::Message {
 public:
  HPChangeSignatureRet();
  virtual ~HPChangeSignatureRet();

  HPChangeSignatureRet(const HPChangeSignatureRet& from);

  inline HPChangeSignatureRet& operator=(const HPChangeSignatureRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPChangeSignatureRet& default_instance();

  void Swap(HPChangeSignatureRet* other);

  // implements Message ----------------------------------------------

  HPChangeSignatureRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPChangeSignatureRet& from);
  void MergeFrom(const HPChangeSignatureRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 version = 1;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 1;
  inline ::google::protobuf::int32 version() const;
  inline void set_version(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HPChangeSignatureRet)
 private:
  inline void set_has_version();
  inline void clear_has_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 version_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static HPChangeSignatureRet* default_instance_;
};
// -------------------------------------------------------------------

class HPUserKickOut : public ::google::protobuf::Message {
 public:
  HPUserKickOut();
  virtual ~HPUserKickOut();

  HPUserKickOut(const HPUserKickOut& from);

  inline HPUserKickOut& operator=(const HPUserKickOut& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPUserKickOut& default_instance();

  void Swap(HPUserKickOut* other);

  // implements Message ----------------------------------------------

  HPUserKickOut* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPUserKickOut& from);
  void MergeFrom(const HPUserKickOut& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 playerId = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int32 playerid() const;
  inline void set_playerid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HPUserKickOut)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 playerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static HPUserKickOut* default_instance_;
};
// -------------------------------------------------------------------

class HPDataNotify : public ::google::protobuf::Message {
 public:
  HPDataNotify();
  virtual ~HPDataNotify();

  HPDataNotify(const HPDataNotify& from);

  inline HPDataNotify& operator=(const HPDataNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPDataNotify& default_instance();

  void Swap(HPDataNotify* other);

  // implements Message ----------------------------------------------

  HPDataNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPDataNotify& from);
  void MergeFrom(const HPDataNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int32 value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline ::google::protobuf::int32 value() const;
  inline void set_value(::google::protobuf::int32 value);

  // optional int32 goodsId = 3;
  inline bool has_goodsid() const;
  inline void clear_goodsid();
  static const int kGoodsIdFieldNumber = 3;
  inline ::google::protobuf::int32 goodsid() const;
  inline void set_goodsid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HPDataNotify)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();
  inline void set_has_goodsid();
  inline void clear_has_goodsid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 value_;
  ::google::protobuf::int32 goodsid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static HPDataNotify* default_instance_;
};
// -------------------------------------------------------------------

class HPEquipSyncFinish : public ::google::protobuf::Message {
 public:
  HPEquipSyncFinish();
  virtual ~HPEquipSyncFinish();

  HPEquipSyncFinish(const HPEquipSyncFinish& from);

  inline HPEquipSyncFinish& operator=(const HPEquipSyncFinish& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPEquipSyncFinish& default_instance();

  void Swap(HPEquipSyncFinish* other);

  // implements Message ----------------------------------------------

  HPEquipSyncFinish* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPEquipSyncFinish& from);
  void MergeFrom(const HPEquipSyncFinish& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 playerId = 1;
  inline bool has_playerid() const;
  inline void clear_playerid();
  static const int kPlayerIdFieldNumber = 1;
  inline ::google::protobuf::int32 playerid() const;
  inline void set_playerid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HPEquipSyncFinish)
 private:
  inline void set_has_playerid();
  inline void clear_has_playerid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 playerid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static HPEquipSyncFinish* default_instance_;
};
// -------------------------------------------------------------------

class HPRoleIncStarExp : public ::google::protobuf::Message {
 public:
  HPRoleIncStarExp();
  virtual ~HPRoleIncStarExp();

  HPRoleIncStarExp(const HPRoleIncStarExp& from);

  inline HPRoleIncStarExp& operator=(const HPRoleIncStarExp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPRoleIncStarExp& default_instance();

  void Swap(HPRoleIncStarExp* other);

  // implements Message ----------------------------------------------

  HPRoleIncStarExp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPRoleIncStarExp& from);
  void MergeFrom(const HPRoleIncStarExp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleId = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // required int32 itemId = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HPRoleIncStarExp)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_itemid();
  inline void clear_has_itemid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 itemid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static HPRoleIncStarExp* default_instance_;
};
// -------------------------------------------------------------------

class HPRoleUpStage : public ::google::protobuf::Message {
 public:
  HPRoleUpStage();
  virtual ~HPRoleUpStage();

  HPRoleUpStage(const HPRoleUpStage& from);

  inline HPRoleUpStage& operator=(const HPRoleUpStage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPRoleUpStage& default_instance();

  void Swap(HPRoleUpStage* other);

  // implements Message ----------------------------------------------

  HPRoleUpStage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPRoleUpStage& from);
  void MergeFrom(const HPRoleUpStage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleId = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HPRoleUpStage)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roleid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static HPRoleUpStage* default_instance_;
};
// -------------------------------------------------------------------

class HPRoleRingIncExp : public ::google::protobuf::Message {
 public:
  HPRoleRingIncExp();
  virtual ~HPRoleRingIncExp();

  HPRoleRingIncExp(const HPRoleRingIncExp& from);

  inline HPRoleRingIncExp& operator=(const HPRoleRingIncExp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPRoleRingIncExp& default_instance();

  void Swap(HPRoleRingIncExp* other);

  // implements Message ----------------------------------------------

  HPRoleRingIncExp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPRoleRingIncExp& from);
  void MergeFrom(const HPRoleRingIncExp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleId = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // required int32 ringItemId = 2;
  inline bool has_ringitemid() const;
  inline void clear_ringitemid();
  static const int kRingItemIdFieldNumber = 2;
  inline ::google::protobuf::int32 ringitemid() const;
  inline void set_ringitemid(::google::protobuf::int32 value);

  // repeated int32 itemId = 3;
  inline int itemid_size() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 3;
  inline ::google::protobuf::int32 itemid(int index) const;
  inline void set_itemid(int index, ::google::protobuf::int32 value);
  inline void add_itemid(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      itemid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_itemid();

  // @@protoc_insertion_point(class_scope:HPRoleRingIncExp)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_ringitemid();
  inline void clear_has_ringitemid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 ringitemid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > itemid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static HPRoleRingIncExp* default_instance_;
};
// -------------------------------------------------------------------

class RoleRingInfo : public ::google::protobuf::Message {
 public:
  RoleRingInfo();
  virtual ~RoleRingInfo();

  RoleRingInfo(const RoleRingInfo& from);

  inline RoleRingInfo& operator=(const RoleRingInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoleRingInfo& default_instance();

  void Swap(RoleRingInfo* other);

  // implements Message ----------------------------------------------

  RoleRingInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RoleRingInfo& from);
  void MergeFrom(const RoleRingInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 ringId = 1;
  inline bool has_ringid() const;
  inline void clear_ringid();
  static const int kRingIdFieldNumber = 1;
  inline ::google::protobuf::int32 ringid() const;
  inline void set_ringid(::google::protobuf::int32 value);

  // required int32 roleId = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 2;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // required int32 itemId = 3;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 3;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // required int32 level = 4;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required int32 exp = 5;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 5;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // optional int32 lvlUpTimes = 6;
  inline bool has_lvluptimes() const;
  inline void clear_lvluptimes();
  static const int kLvlUpTimesFieldNumber = 6;
  inline ::google::protobuf::int32 lvluptimes() const;
  inline void set_lvluptimes(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RoleRingInfo)
 private:
  inline void set_has_ringid();
  inline void clear_has_ringid();
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_lvluptimes();
  inline void clear_has_lvluptimes();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 ringid_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 lvluptimes_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static RoleRingInfo* default_instance_;
};
// -------------------------------------------------------------------

class HPRoleRingInfoSync : public ::google::protobuf::Message {
 public:
  HPRoleRingInfoSync();
  virtual ~HPRoleRingInfoSync();

  HPRoleRingInfoSync(const HPRoleRingInfoSync& from);

  inline HPRoleRingInfoSync& operator=(const HPRoleRingInfoSync& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPRoleRingInfoSync& default_instance();

  void Swap(HPRoleRingInfoSync* other);

  // implements Message ----------------------------------------------

  HPRoleRingInfoSync* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPRoleRingInfoSync& from);
  void MergeFrom(const HPRoleRingInfoSync& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .RoleRingInfo ringInfos = 1;
  inline int ringinfos_size() const;
  inline void clear_ringinfos();
  static const int kRingInfosFieldNumber = 1;
  inline const ::RoleRingInfo& ringinfos(int index) const;
  inline ::RoleRingInfo* mutable_ringinfos(int index);
  inline ::RoleRingInfo* add_ringinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::RoleRingInfo >&
      ringinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::RoleRingInfo >*
      mutable_ringinfos();

  // @@protoc_insertion_point(class_scope:HPRoleRingInfoSync)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::RoleRingInfo > ringinfos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static HPRoleRingInfoSync* default_instance_;
};
// -------------------------------------------------------------------

class HPRoleRingActive : public ::google::protobuf::Message {
 public:
  HPRoleRingActive();
  virtual ~HPRoleRingActive();

  HPRoleRingActive(const HPRoleRingActive& from);

  inline HPRoleRingActive& operator=(const HPRoleRingActive& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPRoleRingActive& default_instance();

  void Swap(HPRoleRingActive* other);

  // implements Message ----------------------------------------------

  HPRoleRingActive* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPRoleRingActive& from);
  void MergeFrom(const HPRoleRingActive& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 roleId = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // required int32 itemId = 2;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HPRoleRingActive)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_itemid();
  inline void clear_has_itemid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 itemid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static HPRoleRingActive* default_instance_;
};
// -------------------------------------------------------------------

class EliteMapInfo : public ::google::protobuf::Message {
 public:
  EliteMapInfo();
  virtual ~EliteMapInfo();

  EliteMapInfo(const EliteMapInfo& from);

  inline EliteMapInfo& operator=(const EliteMapInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EliteMapInfo& default_instance();

  void Swap(EliteMapInfo* other);

  // implements Message ----------------------------------------------

  EliteMapInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EliteMapInfo& from);
  void MergeFrom(const EliteMapInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required int32 mapId = 2;
  inline bool has_mapid() const;
  inline void clear_mapid();
  static const int kMapIdFieldNumber = 2;
  inline ::google::protobuf::int32 mapid() const;
  inline void set_mapid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:EliteMapInfo)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_mapid();
  inline void clear_has_mapid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 mapid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static EliteMapInfo* default_instance_;
};
// -------------------------------------------------------------------

class HPEliteMapInfoSync : public ::google::protobuf::Message {
 public:
  HPEliteMapInfoSync();
  virtual ~HPEliteMapInfoSync();

  HPEliteMapInfoSync(const HPEliteMapInfoSync& from);

  inline HPEliteMapInfoSync& operator=(const HPEliteMapInfoSync& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPEliteMapInfoSync& default_instance();

  void Swap(HPEliteMapInfoSync* other);

  // implements Message ----------------------------------------------

  HPEliteMapInfoSync* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPEliteMapInfoSync& from);
  void MergeFrom(const HPEliteMapInfoSync& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .EliteMapInfo eliteMapInfos = 1;
  inline int elitemapinfos_size() const;
  inline void clear_elitemapinfos();
  static const int kEliteMapInfosFieldNumber = 1;
  inline const ::EliteMapInfo& elitemapinfos(int index) const;
  inline ::EliteMapInfo* mutable_elitemapinfos(int index);
  inline ::EliteMapInfo* add_elitemapinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::EliteMapInfo >&
      elitemapinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::EliteMapInfo >*
      mutable_elitemapinfos();

  // @@protoc_insertion_point(class_scope:HPEliteMapInfoSync)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::EliteMapInfo > elitemapinfos_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static HPEliteMapInfoSync* default_instance_;
};
// -------------------------------------------------------------------

class HPEvaluateRewards : public ::google::protobuf::Message {
 public:
  HPEvaluateRewards();
  virtual ~HPEvaluateRewards();

  HPEvaluateRewards(const HPEvaluateRewards& from);

  inline HPEvaluateRewards& operator=(const HPEvaluateRewards& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPEvaluateRewards& default_instance();

  void Swap(HPEvaluateRewards* other);

  // implements Message ----------------------------------------------

  HPEvaluateRewards* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPEvaluateRewards& from);
  void MergeFrom(const HPEvaluateRewards& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:HPEvaluateRewards)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static HPEvaluateRewards* default_instance_;
};
// -------------------------------------------------------------------

class Params : public ::google::protobuf::Message {
 public:
  Params();
  virtual ~Params();

  Params(const Params& from);

  inline Params& operator=(const Params& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Params& default_instance();

  void Swap(Params* other);

  // implements Message ----------------------------------------------

  Params* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Params& from);
  void MergeFrom(const Params& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string key = 1;
  inline bool has_key() const;
  inline void clear_key();
  static const int kKeyFieldNumber = 1;
  inline const ::std::string& key() const;
  inline void set_key(const ::std::string& value);
  inline void set_key(const char* value);
  inline void set_key(const char* value, size_t size);
  inline ::std::string* mutable_key();
  inline ::std::string* release_key();
  inline void set_allocated_key(::std::string* key);

  // required string value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const char* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  inline void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:Params)
 private:
  inline void set_has_key();
  inline void clear_has_key();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* key_;
  ::std::string* value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static Params* default_instance_;
};
// -------------------------------------------------------------------

class HPClientSetting : public ::google::protobuf::Message {
 public:
  HPClientSetting();
  virtual ~HPClientSetting();

  HPClientSetting(const HPClientSetting& from);

  inline HPClientSetting& operator=(const HPClientSetting& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPClientSetting& default_instance();

  void Swap(HPClientSetting* other);

  // implements Message ----------------------------------------------

  HPClientSetting* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPClientSetting& from);
  void MergeFrom(const HPClientSetting& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Params params = 1;
  inline int params_size() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 1;
  inline const ::Params& params(int index) const;
  inline ::Params* mutable_params(int index);
  inline ::Params* add_params();
  inline const ::google::protobuf::RepeatedPtrField< ::Params >&
      params() const;
  inline ::google::protobuf::RepeatedPtrField< ::Params >*
      mutable_params();

  // @@protoc_insertion_point(class_scope:HPClientSetting)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Params > params_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static HPClientSetting* default_instance_;
};
// -------------------------------------------------------------------

class HPPlayerAreaSync : public ::google::protobuf::Message {
 public:
  HPPlayerAreaSync();
  virtual ~HPPlayerAreaSync();

  HPPlayerAreaSync(const HPPlayerAreaSync& from);

  inline HPPlayerAreaSync& operator=(const HPPlayerAreaSync& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPPlayerAreaSync& default_instance();

  void Swap(HPPlayerAreaSync* other);

  // implements Message ----------------------------------------------

  HPPlayerAreaSync* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPPlayerAreaSync& from);
  void MergeFrom(const HPPlayerAreaSync& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string area = 1;
  inline bool has_area() const;
  inline void clear_area();
  static const int kAreaFieldNumber = 1;
  inline const ::std::string& area() const;
  inline void set_area(const ::std::string& value);
  inline void set_area(const char* value);
  inline void set_area(const char* value, size_t size);
  inline ::std::string* mutable_area();
  inline ::std::string* release_area();
  inline void set_allocated_area(::std::string* area);

  // @@protoc_insertion_point(class_scope:HPPlayerAreaSync)
 private:
  inline void set_has_area();
  inline void clear_has_area();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* area_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static HPPlayerAreaSync* default_instance_;
};
// -------------------------------------------------------------------

class HPChangeRoleName : public ::google::protobuf::Message {
 public:
  HPChangeRoleName();
  virtual ~HPChangeRoleName();

  HPChangeRoleName(const HPChangeRoleName& from);

  inline HPChangeRoleName& operator=(const HPChangeRoleName& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPChangeRoleName& default_instance();

  void Swap(HPChangeRoleName* other);

  // implements Message ----------------------------------------------

  HPChangeRoleName* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPChangeRoleName& from);
  void MergeFrom(const HPChangeRoleName& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:HPChangeRoleName)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static HPChangeRoleName* default_instance_;
};
// -------------------------------------------------------------------

class HPChangeRoleNameRet : public ::google::protobuf::Message {
 public:
  HPChangeRoleNameRet();
  virtual ~HPChangeRoleNameRet();

  HPChangeRoleNameRet(const HPChangeRoleNameRet& from);

  inline HPChangeRoleNameRet& operator=(const HPChangeRoleNameRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPChangeRoleNameRet& default_instance();

  void Swap(HPChangeRoleNameRet* other);

  // implements Message ----------------------------------------------

  HPChangeRoleNameRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPChangeRoleNameRet& from);
  void MergeFrom(const HPChangeRoleNameRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:HPChangeRoleNameRet)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static HPChangeRoleNameRet* default_instance_;
};
// -------------------------------------------------------------------

class HPCommentMsg : public ::google::protobuf::Message {
 public:
  HPCommentMsg();
  virtual ~HPCommentMsg();

  HPCommentMsg(const HPCommentMsg& from);

  inline HPCommentMsg& operator=(const HPCommentMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPCommentMsg& default_instance();

  void Swap(HPCommentMsg* other);

  // implements Message ----------------------------------------------

  HPCommentMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPCommentMsg& from);
  void MergeFrom(const HPCommentMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HPCommentMsg)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static HPCommentMsg* default_instance_;
};
// -------------------------------------------------------------------

class HPCommentMsgRet : public ::google::protobuf::Message {
 public:
  HPCommentMsgRet();
  virtual ~HPCommentMsgRet();

  HPCommentMsgRet(const HPCommentMsgRet& from);

  inline HPCommentMsgRet& operator=(const HPCommentMsgRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPCommentMsgRet& default_instance();

  void Swap(HPCommentMsgRet* other);

  // implements Message ----------------------------------------------

  HPCommentMsgRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPCommentMsgRet& from);
  void MergeFrom(const HPCommentMsgRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 number = 1;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 1;
  inline ::google::protobuf::int32 number() const;
  inline void set_number(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HPCommentMsgRet)
 private:
  inline void set_has_number();
  inline void clear_has_number();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 number_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static HPCommentMsgRet* default_instance_;
};
// -------------------------------------------------------------------

class HPGoogleAchieveMsg : public ::google::protobuf::Message {
 public:
  HPGoogleAchieveMsg();
  virtual ~HPGoogleAchieveMsg();

  HPGoogleAchieveMsg(const HPGoogleAchieveMsg& from);

  inline HPGoogleAchieveMsg& operator=(const HPGoogleAchieveMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPGoogleAchieveMsg& default_instance();

  void Swap(HPGoogleAchieveMsg* other);

  // implements Message ----------------------------------------------

  HPGoogleAchieveMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPGoogleAchieveMsg& from);
  void MergeFrom(const HPGoogleAchieveMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // repeated string achieveinfo = 2;
  inline int achieveinfo_size() const;
  inline void clear_achieveinfo();
  static const int kAchieveinfoFieldNumber = 2;
  inline const ::std::string& achieveinfo(int index) const;
  inline ::std::string* mutable_achieveinfo(int index);
  inline void set_achieveinfo(int index, const ::std::string& value);
  inline void set_achieveinfo(int index, const char* value);
  inline void set_achieveinfo(int index, const char* value, size_t size);
  inline ::std::string* add_achieveinfo();
  inline void add_achieveinfo(const ::std::string& value);
  inline void add_achieveinfo(const char* value);
  inline void add_achieveinfo(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& achieveinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_achieveinfo();

  // @@protoc_insertion_point(class_scope:HPGoogleAchieveMsg)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> achieveinfo_;
  ::google::protobuf::int32 type_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static HPGoogleAchieveMsg* default_instance_;
};
// -------------------------------------------------------------------

class HPGoogleAchieveMsgRet : public ::google::protobuf::Message {
 public:
  HPGoogleAchieveMsgRet();
  virtual ~HPGoogleAchieveMsgRet();

  HPGoogleAchieveMsgRet(const HPGoogleAchieveMsgRet& from);

  inline HPGoogleAchieveMsgRet& operator=(const HPGoogleAchieveMsgRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPGoogleAchieveMsgRet& default_instance();

  void Swap(HPGoogleAchieveMsgRet* other);

  // implements Message ----------------------------------------------

  HPGoogleAchieveMsgRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPGoogleAchieveMsgRet& from);
  void MergeFrom(const HPGoogleAchieveMsgRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string achieveinfo = 1;
  inline int achieveinfo_size() const;
  inline void clear_achieveinfo();
  static const int kAchieveinfoFieldNumber = 1;
  inline const ::std::string& achieveinfo(int index) const;
  inline ::std::string* mutable_achieveinfo(int index);
  inline void set_achieveinfo(int index, const ::std::string& value);
  inline void set_achieveinfo(int index, const char* value);
  inline void set_achieveinfo(int index, const char* value, size_t size);
  inline ::std::string* add_achieveinfo();
  inline void add_achieveinfo(const ::std::string& value);
  inline void add_achieveinfo(const char* value);
  inline void add_achieveinfo(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& achieveinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_achieveinfo();

  // @@protoc_insertion_point(class_scope:HPGoogleAchieveMsgRet)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> achieveinfo_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static HPGoogleAchieveMsgRet* default_instance_;
};
// -------------------------------------------------------------------

class HPFacebookShareEvent : public ::google::protobuf::Message {
 public:
  HPFacebookShareEvent();
  virtual ~HPFacebookShareEvent();

  HPFacebookShareEvent(const HPFacebookShareEvent& from);

  inline HPFacebookShareEvent& operator=(const HPFacebookShareEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPFacebookShareEvent& default_instance();

  void Swap(HPFacebookShareEvent* other);

  // implements Message ----------------------------------------------

  HPFacebookShareEvent* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPFacebookShareEvent& from);
  void MergeFrom(const HPFacebookShareEvent& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:HPFacebookShareEvent)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static HPFacebookShareEvent* default_instance_;
};
// -------------------------------------------------------------------

class HPFacebookShareEventRet : public ::google::protobuf::Message {
 public:
  HPFacebookShareEventRet();
  virtual ~HPFacebookShareEventRet();

  HPFacebookShareEventRet(const HPFacebookShareEventRet& from);

  inline HPFacebookShareEventRet& operator=(const HPFacebookShareEventRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPFacebookShareEventRet& default_instance();

  void Swap(HPFacebookShareEventRet* other);

  // implements Message ----------------------------------------------

  HPFacebookShareEventRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPFacebookShareEventRet& from);
  void MergeFrom(const HPFacebookShareEventRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 number = 1;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 1;
  inline ::google::protobuf::int32 number() const;
  inline void set_number(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HPFacebookShareEventRet)
 private:
  inline void set_has_number();
  inline void clear_has_number();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 number_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static HPFacebookShareEventRet* default_instance_;
};
// -------------------------------------------------------------------

class HPFacebookShareCount : public ::google::protobuf::Message {
 public:
  HPFacebookShareCount();
  virtual ~HPFacebookShareCount();

  HPFacebookShareCount(const HPFacebookShareCount& from);

  inline HPFacebookShareCount& operator=(const HPFacebookShareCount& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPFacebookShareCount& default_instance();

  void Swap(HPFacebookShareCount* other);

  // implements Message ----------------------------------------------

  HPFacebookShareCount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPFacebookShareCount& from);
  void MergeFrom(const HPFacebookShareCount& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:HPFacebookShareCount)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static HPFacebookShareCount* default_instance_;
};
// -------------------------------------------------------------------

class HPFacebookShareCountRet : public ::google::protobuf::Message {
 public:
  HPFacebookShareCountRet();
  virtual ~HPFacebookShareCountRet();

  HPFacebookShareCountRet(const HPFacebookShareCountRet& from);

  inline HPFacebookShareCountRet& operator=(const HPFacebookShareCountRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPFacebookShareCountRet& default_instance();

  void Swap(HPFacebookShareCountRet* other);

  // implements Message ----------------------------------------------

  HPFacebookShareCountRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPFacebookShareCountRet& from);
  void MergeFrom(const HPFacebookShareCountRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 number = 1;
  inline bool has_number() const;
  inline void clear_number();
  static const int kNumberFieldNumber = 1;
  inline ::google::protobuf::int32 number() const;
  inline void set_number(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HPFacebookShareCountRet)
 private:
  inline void set_has_number();
  inline void clear_has_number();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 number_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static HPFacebookShareCountRet* default_instance_;
};
// -------------------------------------------------------------------

class HPPlayerBindPrice : public ::google::protobuf::Message {
 public:
  HPPlayerBindPrice();
  virtual ~HPPlayerBindPrice();

  HPPlayerBindPrice(const HPPlayerBindPrice& from);

  inline HPPlayerBindPrice& operator=(const HPPlayerBindPrice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPPlayerBindPrice& default_instance();

  void Swap(HPPlayerBindPrice* other);

  // implements Message ----------------------------------------------

  HPPlayerBindPrice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPPlayerBindPrice& from);
  void MergeFrom(const HPPlayerBindPrice& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:HPPlayerBindPrice)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static HPPlayerBindPrice* default_instance_;
};
// -------------------------------------------------------------------

class HPPlayerBindPriceRet : public ::google::protobuf::Message {
 public:
  HPPlayerBindPriceRet();
  virtual ~HPPlayerBindPriceRet();

  HPPlayerBindPriceRet(const HPPlayerBindPriceRet& from);

  inline HPPlayerBindPriceRet& operator=(const HPPlayerBindPriceRet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPPlayerBindPriceRet& default_instance();

  void Swap(HPPlayerBindPriceRet* other);

  // implements Message ----------------------------------------------

  HPPlayerBindPriceRet* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPPlayerBindPriceRet& from);
  void MergeFrom(const HPPlayerBindPriceRet& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:HPPlayerBindPriceRet)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 status_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_Player_2eproto();
  friend void protobuf_AssignDesc_Player_2eproto();
  friend void protobuf_ShutdownFile_Player_2eproto();

  void InitAsDefaultInstance();
  static HPPlayerBindPriceRet* default_instance_;
};
// ===================================================================


// ===================================================================

// PlayerInfo

// required int32 playerId = 1;
inline bool PlayerInfo::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerInfo::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerInfo::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerInfo::clear_playerid() {
  playerid_ = 0;
  clear_has_playerid();
}
inline ::google::protobuf::int32 PlayerInfo::playerid() const {
  return playerid_;
}
inline void PlayerInfo::set_playerid(::google::protobuf::int32 value) {
  set_has_playerid();
  playerid_ = value;
}

// required int32 gold = 2;
inline bool PlayerInfo::has_gold() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerInfo::set_has_gold() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerInfo::clear_has_gold() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerInfo::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
inline ::google::protobuf::int32 PlayerInfo::gold() const {
  return gold_;
}
inline void PlayerInfo::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
}

// required int64 coin = 3;
inline bool PlayerInfo::has_coin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerInfo::set_has_coin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerInfo::clear_has_coin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerInfo::clear_coin() {
  coin_ = GOOGLE_LONGLONG(0);
  clear_has_coin();
}
inline ::google::protobuf::int64 PlayerInfo::coin() const {
  return coin_;
}
inline void PlayerInfo::set_coin(::google::protobuf::int64 value) {
  set_has_coin();
  coin_ = value;
}

// required int32 recharge = 4;
inline bool PlayerInfo::has_recharge() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerInfo::set_has_recharge() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerInfo::clear_has_recharge() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerInfo::clear_recharge() {
  recharge_ = 0;
  clear_has_recharge();
}
inline ::google::protobuf::int32 PlayerInfo::recharge() const {
  return recharge_;
}
inline void PlayerInfo::set_recharge(::google::protobuf::int32 value) {
  set_has_recharge();
  recharge_ = value;
}

// required int32 vipLevel = 5;
inline bool PlayerInfo::has_viplevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerInfo::set_has_viplevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlayerInfo::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlayerInfo::clear_viplevel() {
  viplevel_ = 0;
  clear_has_viplevel();
}
inline ::google::protobuf::int32 PlayerInfo::viplevel() const {
  return viplevel_;
}
inline void PlayerInfo::set_viplevel(::google::protobuf::int32 value) {
  set_has_viplevel();
  viplevel_ = value;
}

// required int32 smeltValue = 6;
inline bool PlayerInfo::has_smeltvalue() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PlayerInfo::set_has_smeltvalue() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PlayerInfo::clear_has_smeltvalue() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PlayerInfo::clear_smeltvalue() {
  smeltvalue_ = 0;
  clear_has_smeltvalue();
}
inline ::google::protobuf::int32 PlayerInfo::smeltvalue() const {
  return smeltvalue_;
}
inline void PlayerInfo::set_smeltvalue(::google::protobuf::int32 value) {
  set_has_smeltvalue();
  smeltvalue_ = value;
}

// optional string signature = 7;
inline bool PlayerInfo::has_signature() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PlayerInfo::set_has_signature() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PlayerInfo::clear_has_signature() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PlayerInfo::clear_signature() {
  if (signature_ != &::google::protobuf::internal::kEmptyString) {
    signature_->clear();
  }
  clear_has_signature();
}
inline const ::std::string& PlayerInfo::signature() const {
  return *signature_;
}
inline void PlayerInfo::set_signature(const ::std::string& value) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    signature_ = new ::std::string;
  }
  signature_->assign(value);
}
inline void PlayerInfo::set_signature(const char* value) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    signature_ = new ::std::string;
  }
  signature_->assign(value);
}
inline void PlayerInfo::set_signature(const char* value, size_t size) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    signature_ = new ::std::string;
  }
  signature_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PlayerInfo::mutable_signature() {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    signature_ = new ::std::string;
  }
  return signature_;
}
inline ::std::string* PlayerInfo::release_signature() {
  clear_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = signature_;
    signature_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PlayerInfo::set_allocated_signature(::std::string* signature) {
  if (signature_ != &::google::protobuf::internal::kEmptyString) {
    delete signature_;
  }
  if (signature) {
    set_has_signature();
    signature_ = signature;
  } else {
    clear_has_signature();
    signature_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional int32 honorValue = 8;
inline bool PlayerInfo::has_honorvalue() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PlayerInfo::set_has_honorvalue() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PlayerInfo::clear_has_honorvalue() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PlayerInfo::clear_honorvalue() {
  honorvalue_ = 0;
  clear_has_honorvalue();
}
inline ::google::protobuf::int32 PlayerInfo::honorvalue() const {
  return honorvalue_;
}
inline void PlayerInfo::set_honorvalue(::google::protobuf::int32 value) {
  set_has_honorvalue();
  honorvalue_ = value;
}

// optional int32 reputationValue = 9;
inline bool PlayerInfo::has_reputationvalue() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PlayerInfo::set_has_reputationvalue() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PlayerInfo::clear_has_reputationvalue() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PlayerInfo::clear_reputationvalue() {
  reputationvalue_ = 0;
  clear_has_reputationvalue();
}
inline ::google::protobuf::int32 PlayerInfo::reputationvalue() const {
  return reputationvalue_;
}
inline void PlayerInfo::set_reputationvalue(::google::protobuf::int32 value) {
  set_has_reputationvalue();
  reputationvalue_ = value;
}

// optional int32 monthCardLeftDay = 10;
inline bool PlayerInfo::has_monthcardleftday() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PlayerInfo::set_has_monthcardleftday() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PlayerInfo::clear_has_monthcardleftday() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PlayerInfo::clear_monthcardleftday() {
  monthcardleftday_ = 0;
  clear_has_monthcardleftday();
}
inline ::google::protobuf::int32 PlayerInfo::monthcardleftday() const {
  return monthcardleftday_;
}
inline void PlayerInfo::set_monthcardleftday(::google::protobuf::int32 value) {
  set_has_monthcardleftday();
  monthcardleftday_ = value;
}

// optional int32 talentNum = 11;
inline bool PlayerInfo::has_talentnum() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PlayerInfo::set_has_talentnum() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PlayerInfo::clear_has_talentnum() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PlayerInfo::clear_talentnum() {
  talentnum_ = 0;
  clear_has_talentnum();
}
inline ::google::protobuf::int32 PlayerInfo::talentnum() const {
  return talentnum_;
}
inline void PlayerInfo::set_talentnum(::google::protobuf::int32 value) {
  set_has_talentnum();
  talentnum_ = value;
}

// optional int32 facebookCount = 12;
inline bool PlayerInfo::has_facebookcount() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PlayerInfo::set_has_facebookcount() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PlayerInfo::clear_has_facebookcount() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PlayerInfo::clear_facebookcount() {
  facebookcount_ = 0;
  clear_has_facebookcount();
}
inline ::google::protobuf::int32 PlayerInfo::facebookcount() const {
  return facebookcount_;
}
inline void PlayerInfo::set_facebookcount(::google::protobuf::int32 value) {
  set_has_facebookcount();
  facebookcount_ = value;
}

// optional int32 crystal = 13;
inline bool PlayerInfo::has_crystal() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PlayerInfo::set_has_crystal() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PlayerInfo::clear_has_crystal() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PlayerInfo::clear_crystal() {
  crystal_ = 0;
  clear_has_crystal();
}
inline ::google::protobuf::int32 PlayerInfo::crystal() const {
  return crystal_;
}
inline void PlayerInfo::set_crystal(::google::protobuf::int32 value) {
  set_has_crystal();
  crystal_ = value;
}

// -------------------------------------------------------------------

// RoleEquip

// required int32 part = 1;
inline bool RoleEquip::has_part() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleEquip::set_has_part() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleEquip::clear_has_part() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleEquip::clear_part() {
  part_ = 0;
  clear_has_part();
}
inline ::google::protobuf::int32 RoleEquip::part() const {
  return part_;
}
inline void RoleEquip::set_part(::google::protobuf::int32 value) {
  set_has_part();
  part_ = value;
}

// required int64 equipId = 2;
inline bool RoleEquip::has_equipid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleEquip::set_has_equipid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleEquip::clear_has_equipid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleEquip::clear_equipid() {
  equipid_ = GOOGLE_LONGLONG(0);
  clear_has_equipid();
}
inline ::google::protobuf::int64 RoleEquip::equipid() const {
  return equipid_;
}
inline void RoleEquip::set_equipid(::google::protobuf::int64 value) {
  set_has_equipid();
  equipid_ = value;
}

// required int32 equipItemId = 3;
inline bool RoleEquip::has_equipitemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleEquip::set_has_equipitemid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleEquip::clear_has_equipitemid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleEquip::clear_equipitemid() {
  equipitemid_ = 0;
  clear_has_equipitemid();
}
inline ::google::protobuf::int32 RoleEquip::equipitemid() const {
  return equipitemid_;
}
inline void RoleEquip::set_equipitemid(::google::protobuf::int32 value) {
  set_has_equipitemid();
  equipitemid_ = value;
}

// required int32 strength = 4;
inline bool RoleEquip::has_strength() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoleEquip::set_has_strength() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoleEquip::clear_has_strength() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoleEquip::clear_strength() {
  strength_ = 0;
  clear_has_strength();
}
inline ::google::protobuf::int32 RoleEquip::strength() const {
  return strength_;
}
inline void RoleEquip::set_strength(::google::protobuf::int32 value) {
  set_has_strength();
  strength_ = value;
}

// repeated .GemInfo gemInfo = 5;
inline int RoleEquip::geminfo_size() const {
  return geminfo_.size();
}
inline void RoleEquip::clear_geminfo() {
  geminfo_.Clear();
}
inline const ::GemInfo& RoleEquip::geminfo(int index) const {
  return geminfo_.Get(index);
}
inline ::GemInfo* RoleEquip::mutable_geminfo(int index) {
  return geminfo_.Mutable(index);
}
inline ::GemInfo* RoleEquip::add_geminfo() {
  return geminfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::GemInfo >&
RoleEquip::geminfo() const {
  return geminfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::GemInfo >*
RoleEquip::mutable_geminfo() {
  return &geminfo_;
}

// -------------------------------------------------------------------

// RoleSkill

// required int32 skillId = 1;
inline bool RoleSkill::has_skillid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleSkill::set_has_skillid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleSkill::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleSkill::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
inline ::google::protobuf::int32 RoleSkill::skillid() const {
  return skillid_;
}
inline void RoleSkill::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
}

// optional int32 itemId = 2;
inline bool RoleSkill::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleSkill::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleSkill::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleSkill::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 RoleSkill::itemid() const {
  return itemid_;
}
inline void RoleSkill::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional int32 level = 3 [default = 1];
inline bool RoleSkill::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleSkill::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleSkill::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleSkill::clear_level() {
  level_ = 1;
  clear_has_level();
}
inline ::google::protobuf::int32 RoleSkill::level() const {
  return level_;
}
inline void RoleSkill::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// -------------------------------------------------------------------

// RoleElement

// required int32 index = 1;
inline bool RoleElement::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleElement::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleElement::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleElement::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 RoleElement::index() const {
  return index_;
}
inline void RoleElement::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// required int64 elementId = 2;
inline bool RoleElement::has_elementid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleElement::set_has_elementid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleElement::clear_has_elementid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleElement::clear_elementid() {
  elementid_ = GOOGLE_LONGLONG(0);
  clear_has_elementid();
}
inline ::google::protobuf::int64 RoleElement::elementid() const {
  return elementid_;
}
inline void RoleElement::set_elementid(::google::protobuf::int64 value) {
  set_has_elementid();
  elementid_ = value;
}

// required int32 elementItemId = 3;
inline bool RoleElement::has_elementitemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleElement::set_has_elementitemid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleElement::clear_has_elementitemid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleElement::clear_elementitemid() {
  elementitemid_ = 0;
  clear_has_elementitemid();
}
inline ::google::protobuf::int32 RoleElement::elementitemid() const {
  return elementitemid_;
}
inline void RoleElement::set_elementitemid(::google::protobuf::int32 value) {
  set_has_elementitemid();
  elementitemid_ = value;
}

// required int32 level = 4;
inline bool RoleElement::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoleElement::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoleElement::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoleElement::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 RoleElement::level() const {
  return level_;
}
inline void RoleElement::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// required int32 quality = 5;
inline bool RoleElement::has_quality() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoleElement::set_has_quality() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoleElement::clear_has_quality() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoleElement::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 RoleElement::quality() const {
  return quality_;
}
inline void RoleElement::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
}

// required int32 type = 6;
inline bool RoleElement::has_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoleElement::set_has_type() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoleElement::clear_has_type() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoleElement::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 RoleElement::type() const {
  return type_;
}
inline void RoleElement::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// RoleInfo

// required int32 roleId = 1;
inline bool RoleInfo::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleInfo::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleInfo::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleInfo::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 RoleInfo::roleid() const {
  return roleid_;
}
inline void RoleInfo::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// required int32 type = 2;
inline bool RoleInfo::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleInfo::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleInfo::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 RoleInfo::type() const {
  return type_;
}
inline void RoleInfo::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int32 itemId = 3;
inline bool RoleInfo::has_itemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleInfo::set_has_itemid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleInfo::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleInfo::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 RoleInfo::itemid() const {
  return itemid_;
}
inline void RoleInfo::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// required int32 prof = 4;
inline bool RoleInfo::has_prof() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoleInfo::set_has_prof() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoleInfo::clear_has_prof() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoleInfo::clear_prof() {
  prof_ = 0;
  clear_has_prof();
}
inline ::google::protobuf::int32 RoleInfo::prof() const {
  return prof_;
}
inline void RoleInfo::set_prof(::google::protobuf::int32 value) {
  set_has_prof();
  prof_ = value;
}

// required string name = 5;
inline bool RoleInfo::has_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoleInfo::set_has_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoleInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoleInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& RoleInfo::name() const {
  return *name_;
}
inline void RoleInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RoleInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void RoleInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RoleInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* RoleInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RoleInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 level = 6;
inline bool RoleInfo::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoleInfo::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoleInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoleInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 RoleInfo::level() const {
  return level_;
}
inline void RoleInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// required int64 exp = 7;
inline bool RoleInfo::has_exp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RoleInfo::set_has_exp() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RoleInfo::clear_has_exp() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RoleInfo::clear_exp() {
  exp_ = GOOGLE_LONGLONG(0);
  clear_has_exp();
}
inline ::google::protobuf::int64 RoleInfo::exp() const {
  return exp_;
}
inline void RoleInfo::set_exp(::google::protobuf::int64 value) {
  set_has_exp();
  exp_ = value;
}

// required int32 fight = 8;
inline bool RoleInfo::has_fight() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RoleInfo::set_has_fight() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RoleInfo::clear_has_fight() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RoleInfo::clear_fight() {
  fight_ = 0;
  clear_has_fight();
}
inline ::google::protobuf::int32 RoleInfo::fight() const {
  return fight_;
}
inline void RoleInfo::set_fight(::google::protobuf::int32 value) {
  set_has_fight();
  fight_ = value;
}

// required int32 status = 9;
inline bool RoleInfo::has_status() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RoleInfo::set_has_status() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RoleInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RoleInfo::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 RoleInfo::status() const {
  return status_;
}
inline void RoleInfo::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// repeated .RoleEquip equips = 10;
inline int RoleInfo::equips_size() const {
  return equips_.size();
}
inline void RoleInfo::clear_equips() {
  equips_.Clear();
}
inline const ::RoleEquip& RoleInfo::equips(int index) const {
  return equips_.Get(index);
}
inline ::RoleEquip* RoleInfo::mutable_equips(int index) {
  return equips_.Mutable(index);
}
inline ::RoleEquip* RoleInfo::add_equips() {
  return equips_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RoleEquip >&
RoleInfo::equips() const {
  return equips_;
}
inline ::google::protobuf::RepeatedPtrField< ::RoleEquip >*
RoleInfo::mutable_equips() {
  return &equips_;
}

// repeated .RoleSkill skills = 11;
inline int RoleInfo::skills_size() const {
  return skills_.size();
}
inline void RoleInfo::clear_skills() {
  skills_.Clear();
}
inline const ::RoleSkill& RoleInfo::skills(int index) const {
  return skills_.Get(index);
}
inline ::RoleSkill* RoleInfo::mutable_skills(int index) {
  return skills_.Mutable(index);
}
inline ::RoleSkill* RoleInfo::add_skills() {
  return skills_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RoleSkill >&
RoleInfo::skills() const {
  return skills_;
}
inline ::google::protobuf::RepeatedPtrField< ::RoleSkill >*
RoleInfo::mutable_skills() {
  return &skills_;
}

// required .AttrInfo attribute = 12;
inline bool RoleInfo::has_attribute() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RoleInfo::set_has_attribute() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RoleInfo::clear_has_attribute() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RoleInfo::clear_attribute() {
  if (attribute_ != NULL) attribute_->::AttrInfo::Clear();
  clear_has_attribute();
}
inline const ::AttrInfo& RoleInfo::attribute() const {
  return attribute_ != NULL ? *attribute_ : *default_instance_->attribute_;
}
inline ::AttrInfo* RoleInfo::mutable_attribute() {
  set_has_attribute();
  if (attribute_ == NULL) attribute_ = new ::AttrInfo;
  return attribute_;
}
inline ::AttrInfo* RoleInfo::release_attribute() {
  clear_has_attribute();
  ::AttrInfo* temp = attribute_;
  attribute_ = NULL;
  return temp;
}
inline void RoleInfo::set_allocated_attribute(::AttrInfo* attribute) {
  delete attribute_;
  attribute_ = attribute;
  if (attribute) {
    set_has_attribute();
  } else {
    clear_has_attribute();
  }
}

// optional .AttrInfo baptizeAttr = 13;
inline bool RoleInfo::has_baptizeattr() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void RoleInfo::set_has_baptizeattr() {
  _has_bits_[0] |= 0x00001000u;
}
inline void RoleInfo::clear_has_baptizeattr() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void RoleInfo::clear_baptizeattr() {
  if (baptizeattr_ != NULL) baptizeattr_->::AttrInfo::Clear();
  clear_has_baptizeattr();
}
inline const ::AttrInfo& RoleInfo::baptizeattr() const {
  return baptizeattr_ != NULL ? *baptizeattr_ : *default_instance_->baptizeattr_;
}
inline ::AttrInfo* RoleInfo::mutable_baptizeattr() {
  set_has_baptizeattr();
  if (baptizeattr_ == NULL) baptizeattr_ = new ::AttrInfo;
  return baptizeattr_;
}
inline ::AttrInfo* RoleInfo::release_baptizeattr() {
  clear_has_baptizeattr();
  ::AttrInfo* temp = baptizeattr_;
  baptizeattr_ = NULL;
  return temp;
}
inline void RoleInfo::set_allocated_baptizeattr(::AttrInfo* baptizeattr) {
  delete baptizeattr_;
  baptizeattr_ = baptizeattr;
  if (baptizeattr) {
    set_has_baptizeattr();
  } else {
    clear_has_baptizeattr();
  }
}

// optional .AttrInfo baseAttr = 14;
inline bool RoleInfo::has_baseattr() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void RoleInfo::set_has_baseattr() {
  _has_bits_[0] |= 0x00002000u;
}
inline void RoleInfo::clear_has_baseattr() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void RoleInfo::clear_baseattr() {
  if (baseattr_ != NULL) baseattr_->::AttrInfo::Clear();
  clear_has_baseattr();
}
inline const ::AttrInfo& RoleInfo::baseattr() const {
  return baseattr_ != NULL ? *baseattr_ : *default_instance_->baseattr_;
}
inline ::AttrInfo* RoleInfo::mutable_baseattr() {
  set_has_baseattr();
  if (baseattr_ == NULL) baseattr_ = new ::AttrInfo;
  return baseattr_;
}
inline ::AttrInfo* RoleInfo::release_baseattr() {
  clear_has_baseattr();
  ::AttrInfo* temp = baseattr_;
  baseattr_ = NULL;
  return temp;
}
inline void RoleInfo::set_allocated_baseattr(::AttrInfo* baseattr) {
  delete baseattr_;
  baseattr_ = baseattr;
  if (baseattr) {
    set_has_baseattr();
  } else {
    clear_has_baseattr();
  }
}

// repeated .RoleSkill skills2 = 15;
inline int RoleInfo::skills2_size() const {
  return skills2_.size();
}
inline void RoleInfo::clear_skills2() {
  skills2_.Clear();
}
inline const ::RoleSkill& RoleInfo::skills2(int index) const {
  return skills2_.Get(index);
}
inline ::RoleSkill* RoleInfo::mutable_skills2(int index) {
  return skills2_.Mutable(index);
}
inline ::RoleSkill* RoleInfo::add_skills2() {
  return skills2_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RoleSkill >&
RoleInfo::skills2() const {
  return skills2_;
}
inline ::google::protobuf::RepeatedPtrField< ::RoleSkill >*
RoleInfo::mutable_skills2() {
  return &skills2_;
}

// repeated .RoleSkill skills3 = 16;
inline int RoleInfo::skills3_size() const {
  return skills3_.size();
}
inline void RoleInfo::clear_skills3() {
  skills3_.Clear();
}
inline const ::RoleSkill& RoleInfo::skills3(int index) const {
  return skills3_.Get(index);
}
inline ::RoleSkill* RoleInfo::mutable_skills3(int index) {
  return skills3_.Mutable(index);
}
inline ::RoleSkill* RoleInfo::add_skills3() {
  return skills3_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RoleSkill >&
RoleInfo::skills3() const {
  return skills3_;
}
inline ::google::protobuf::RepeatedPtrField< ::RoleSkill >*
RoleInfo::mutable_skills3() {
  return &skills3_;
}

// optional int32 starLevel = 17;
inline bool RoleInfo::has_starlevel() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void RoleInfo::set_has_starlevel() {
  _has_bits_[0] |= 0x00010000u;
}
inline void RoleInfo::clear_has_starlevel() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void RoleInfo::clear_starlevel() {
  starlevel_ = 0;
  clear_has_starlevel();
}
inline ::google::protobuf::int32 RoleInfo::starlevel() const {
  return starlevel_;
}
inline void RoleInfo::set_starlevel(::google::protobuf::int32 value) {
  set_has_starlevel();
  starlevel_ = value;
}

// optional int32 starExp = 18;
inline bool RoleInfo::has_starexp() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void RoleInfo::set_has_starexp() {
  _has_bits_[0] |= 0x00020000u;
}
inline void RoleInfo::clear_has_starexp() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void RoleInfo::clear_starexp() {
  starexp_ = 0;
  clear_has_starexp();
}
inline ::google::protobuf::int32 RoleInfo::starexp() const {
  return starexp_;
}
inline void RoleInfo::set_starexp(::google::protobuf::int32 value) {
  set_has_starexp();
  starexp_ = value;
}

// repeated .RoleElement elements = 19;
inline int RoleInfo::elements_size() const {
  return elements_.size();
}
inline void RoleInfo::clear_elements() {
  elements_.Clear();
}
inline const ::RoleElement& RoleInfo::elements(int index) const {
  return elements_.Get(index);
}
inline ::RoleElement* RoleInfo::mutable_elements(int index) {
  return elements_.Mutable(index);
}
inline ::RoleElement* RoleInfo::add_elements() {
  return elements_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RoleElement >&
RoleInfo::elements() const {
  return elements_;
}
inline ::google::protobuf::RepeatedPtrField< ::RoleElement >*
RoleInfo::mutable_elements() {
  return &elements_;
}

// optional int32 rebirthStage = 20;
inline bool RoleInfo::has_rebirthstage() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void RoleInfo::set_has_rebirthstage() {
  _has_bits_[0] |= 0x00080000u;
}
inline void RoleInfo::clear_has_rebirthstage() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void RoleInfo::clear_rebirthstage() {
  rebirthstage_ = 0;
  clear_has_rebirthstage();
}
inline ::google::protobuf::int32 RoleInfo::rebirthstage() const {
  return rebirthstage_;
}
inline void RoleInfo::set_rebirthstage(::google::protobuf::int32 value) {
  set_has_rebirthstage();
  rebirthstage_ = value;
}

// optional int32 stageLevel = 21;
inline bool RoleInfo::has_stagelevel() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void RoleInfo::set_has_stagelevel() {
  _has_bits_[0] |= 0x00100000u;
}
inline void RoleInfo::clear_has_stagelevel() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void RoleInfo::clear_stagelevel() {
  stagelevel_ = 0;
  clear_has_stagelevel();
}
inline ::google::protobuf::int32 RoleInfo::stagelevel() const {
  return stagelevel_;
}
inline void RoleInfo::set_stagelevel(::google::protobuf::int32 value) {
  set_has_stagelevel();
  stagelevel_ = value;
}

// -------------------------------------------------------------------

// HPPlayerInfoSync

// repeated .PlayerInfo playerInfos = 1;
inline int HPPlayerInfoSync::playerinfos_size() const {
  return playerinfos_.size();
}
inline void HPPlayerInfoSync::clear_playerinfos() {
  playerinfos_.Clear();
}
inline const ::PlayerInfo& HPPlayerInfoSync::playerinfos(int index) const {
  return playerinfos_.Get(index);
}
inline ::PlayerInfo* HPPlayerInfoSync::mutable_playerinfos(int index) {
  return playerinfos_.Mutable(index);
}
inline ::PlayerInfo* HPPlayerInfoSync::add_playerinfos() {
  return playerinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PlayerInfo >&
HPPlayerInfoSync::playerinfos() const {
  return playerinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::PlayerInfo >*
HPPlayerInfoSync::mutable_playerinfos() {
  return &playerinfos_;
}

// -------------------------------------------------------------------

// HPRoleInfoSync

// repeated .RoleInfo roleInfos = 1;
inline int HPRoleInfoSync::roleinfos_size() const {
  return roleinfos_.size();
}
inline void HPRoleInfoSync::clear_roleinfos() {
  roleinfos_.Clear();
}
inline const ::RoleInfo& HPRoleInfoSync::roleinfos(int index) const {
  return roleinfos_.Get(index);
}
inline ::RoleInfo* HPRoleInfoSync::mutable_roleinfos(int index) {
  return roleinfos_.Mutable(index);
}
inline ::RoleInfo* HPRoleInfoSync::add_roleinfos() {
  return roleinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RoleInfo >&
HPRoleInfoSync::roleinfos() const {
  return roleinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::RoleInfo >*
HPRoleInfoSync::mutable_roleinfos() {
  return &roleinfos_;
}

// -------------------------------------------------------------------

// HPSysSetting

// optional int32 autoSellEquip = 1;
inline bool HPSysSetting::has_autosellequip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HPSysSetting::set_has_autosellequip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HPSysSetting::clear_has_autosellequip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HPSysSetting::clear_autosellequip() {
  autosellequip_ = 0;
  clear_has_autosellequip();
}
inline ::google::protobuf::int32 HPSysSetting::autosellequip() const {
  return autosellequip_;
}
inline void HPSysSetting::set_autosellequip(::google::protobuf::int32 value) {
  set_has_autosellequip();
  autosellequip_ = value;
}

// optional int32 chatClose = 2;
inline bool HPSysSetting::has_chatclose() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HPSysSetting::set_has_chatclose() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HPSysSetting::clear_has_chatclose() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HPSysSetting::clear_chatclose() {
  chatclose_ = 0;
  clear_has_chatclose();
}
inline ::google::protobuf::int32 HPSysSetting::chatclose() const {
  return chatclose_;
}
inline void HPSysSetting::set_chatclose(::google::protobuf::int32 value) {
  set_has_chatclose();
  chatclose_ = value;
}

// optional int32 wipeBoss = 3;
inline bool HPSysSetting::has_wipeboss() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HPSysSetting::set_has_wipeboss() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HPSysSetting::clear_has_wipeboss() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HPSysSetting::clear_wipeboss() {
  wipeboss_ = 0;
  clear_has_wipeboss();
}
inline ::google::protobuf::int32 HPSysSetting::wipeboss() const {
  return wipeboss_;
}
inline void HPSysSetting::set_wipeboss(::google::protobuf::int32 value) {
  set_has_wipeboss();
  wipeboss_ = value;
}

// optional int32 musicOn = 4;
inline bool HPSysSetting::has_musicon() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HPSysSetting::set_has_musicon() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HPSysSetting::clear_has_musicon() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HPSysSetting::clear_musicon() {
  musicon_ = 0;
  clear_has_musicon();
}
inline ::google::protobuf::int32 HPSysSetting::musicon() const {
  return musicon_;
}
inline void HPSysSetting::set_musicon(::google::protobuf::int32 value) {
  set_has_musicon();
  musicon_ = value;
}

// optional int32 soundOn = 5;
inline bool HPSysSetting::has_soundon() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HPSysSetting::set_has_soundon() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HPSysSetting::clear_has_soundon() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HPSysSetting::clear_soundon() {
  soundon_ = 0;
  clear_has_soundon();
}
inline ::google::protobuf::int32 HPSysSetting::soundon() const {
  return soundon_;
}
inline void HPSysSetting::set_soundon(::google::protobuf::int32 value) {
  set_has_soundon();
  soundon_ = value;
}

// optional int32 showArea = 6;
inline bool HPSysSetting::has_showarea() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HPSysSetting::set_has_showarea() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HPSysSetting::clear_has_showarea() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HPSysSetting::clear_showarea() {
  showarea_ = 0;
  clear_has_showarea();
}
inline ::google::protobuf::int32 HPSysSetting::showarea() const {
  return showarea_;
}
inline void HPSysSetting::set_showarea(::google::protobuf::int32 value) {
  set_has_showarea();
  showarea_ = value;
}

// optional int32 onlyText = 7;
inline bool HPSysSetting::has_onlytext() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HPSysSetting::set_has_onlytext() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HPSysSetting::clear_has_onlytext() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HPSysSetting::clear_onlytext() {
  onlytext_ = 0;
  clear_has_onlytext();
}
inline ::google::protobuf::int32 HPSysSetting::onlytext() const {
  return onlytext_;
}
inline void HPSysSetting::set_onlytext(::google::protobuf::int32 value) {
  set_has_onlytext();
  onlytext_ = value;
}

// optional int32 autoDecoElement = 8;
inline bool HPSysSetting::has_autodecoelement() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void HPSysSetting::set_has_autodecoelement() {
  _has_bits_[0] |= 0x00000080u;
}
inline void HPSysSetting::clear_has_autodecoelement() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void HPSysSetting::clear_autodecoelement() {
  autodecoelement_ = 0;
  clear_has_autodecoelement();
}
inline ::google::protobuf::int32 HPSysSetting::autodecoelement() const {
  return autodecoelement_;
}
inline void HPSysSetting::set_autodecoelement(::google::protobuf::int32 value) {
  set_has_autodecoelement();
  autodecoelement_ = value;
}

// optional int32 fontSize = 9;
inline bool HPSysSetting::has_fontsize() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void HPSysSetting::set_has_fontsize() {
  _has_bits_[0] |= 0x00000100u;
}
inline void HPSysSetting::clear_has_fontsize() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void HPSysSetting::clear_fontsize() {
  fontsize_ = 0;
  clear_has_fontsize();
}
inline ::google::protobuf::int32 HPSysSetting::fontsize() const {
  return fontsize_;
}
inline void HPSysSetting::set_fontsize(::google::protobuf::int32 value) {
  set_has_fontsize();
  fontsize_ = value;
}

// -------------------------------------------------------------------

// HPPlayerStateSync

// optional int32 buyCoinTimes = 1;
inline bool HPPlayerStateSync::has_buycointimes() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HPPlayerStateSync::set_has_buycointimes() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HPPlayerStateSync::clear_has_buycointimes() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HPPlayerStateSync::clear_buycointimes() {
  buycointimes_ = 0;
  clear_has_buycointimes();
}
inline ::google::protobuf::int32 HPPlayerStateSync::buycointimes() const {
  return buycointimes_;
}
inline void HPPlayerStateSync::set_buycointimes(::google::protobuf::int32 value) {
  set_has_buycointimes();
  buycointimes_ = value;
}

// optional int32 currentEquipBagSize = 2;
inline bool HPPlayerStateSync::has_currentequipbagsize() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HPPlayerStateSync::set_has_currentequipbagsize() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HPPlayerStateSync::clear_has_currentequipbagsize() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HPPlayerStateSync::clear_currentequipbagsize() {
  currentequipbagsize_ = 0;
  clear_has_currentequipbagsize();
}
inline ::google::protobuf::int32 HPPlayerStateSync::currentequipbagsize() const {
  return currentequipbagsize_;
}
inline void HPPlayerStateSync::set_currentequipbagsize(::google::protobuf::int32 value) {
  set_has_currentequipbagsize();
  currentequipbagsize_ = value;
}

// optional int32 leftEquipBagExtendTimes = 3;
inline bool HPPlayerStateSync::has_leftequipbagextendtimes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HPPlayerStateSync::set_has_leftequipbagextendtimes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HPPlayerStateSync::clear_has_leftequipbagextendtimes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HPPlayerStateSync::clear_leftequipbagextendtimes() {
  leftequipbagextendtimes_ = 0;
  clear_has_leftequipbagextendtimes();
}
inline ::google::protobuf::int32 HPPlayerStateSync::leftequipbagextendtimes() const {
  return leftequipbagextendtimes_;
}
inline void HPPlayerStateSync::set_leftequipbagextendtimes(::google::protobuf::int32 value) {
  set_has_leftequipbagextendtimes();
  leftequipbagextendtimes_ = value;
}

// optional int32 autoSellEquip = 4;
inline bool HPPlayerStateSync::has_autosellequip() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HPPlayerStateSync::set_has_autosellequip() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HPPlayerStateSync::clear_has_autosellequip() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HPPlayerStateSync::clear_autosellequip() {
  autosellequip_ = 0;
  clear_has_autosellequip();
}
inline ::google::protobuf::int32 HPPlayerStateSync::autosellequip() const {
  return autosellequip_;
}
inline void HPPlayerStateSync::set_autosellequip(::google::protobuf::int32 value) {
  set_has_autosellequip();
  autosellequip_ = value;
}

// optional int32 chatClose = 5;
inline bool HPPlayerStateSync::has_chatclose() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void HPPlayerStateSync::set_has_chatclose() {
  _has_bits_[0] |= 0x00000010u;
}
inline void HPPlayerStateSync::clear_has_chatclose() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void HPPlayerStateSync::clear_chatclose() {
  chatclose_ = 0;
  clear_has_chatclose();
}
inline ::google::protobuf::int32 HPPlayerStateSync::chatclose() const {
  return chatclose_;
}
inline void HPPlayerStateSync::set_chatclose(::google::protobuf::int32 value) {
  set_has_chatclose();
  chatclose_ = value;
}

// optional int32 fastFightTimes = 6;
inline bool HPPlayerStateSync::has_fastfighttimes() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void HPPlayerStateSync::set_has_fastfighttimes() {
  _has_bits_[0] |= 0x00000020u;
}
inline void HPPlayerStateSync::clear_has_fastfighttimes() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void HPPlayerStateSync::clear_fastfighttimes() {
  fastfighttimes_ = 0;
  clear_has_fastfighttimes();
}
inline ::google::protobuf::int32 HPPlayerStateSync::fastfighttimes() const {
  return fastfighttimes_;
}
inline void HPPlayerStateSync::set_fastfighttimes(::google::protobuf::int32 value) {
  set_has_fastfighttimes();
  fastfighttimes_ = value;
}

// optional int32 fastFightBuyTimes = 7;
inline bool HPPlayerStateSync::has_fastfightbuytimes() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void HPPlayerStateSync::set_has_fastfightbuytimes() {
  _has_bits_[0] |= 0x00000040u;
}
inline void HPPlayerStateSync::clear_has_fastfightbuytimes() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void HPPlayerStateSync::clear_fastfightbuytimes() {
  fastfightbuytimes_ = 0;
  clear_has_fastfightbuytimes();
}
inline ::google::protobuf::int32 HPPlayerStateSync::fastfightbuytimes() const {
  return fastfightbuytimes_;
}
inline void HPPlayerStateSync::set_fastfightbuytimes(::google::protobuf::int32 value) {
  set_has_fastfightbuytimes();
  fastfightbuytimes_ = value;
}

// optional int32 bossFightTimes = 8;
inline bool HPPlayerStateSync::has_bossfighttimes() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void HPPlayerStateSync::set_has_bossfighttimes() {
  _has_bits_[0] |= 0x00000080u;
}
inline void HPPlayerStateSync::clear_has_bossfighttimes() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void HPPlayerStateSync::clear_bossfighttimes() {
  bossfighttimes_ = 0;
  clear_has_bossfighttimes();
}
inline ::google::protobuf::int32 HPPlayerStateSync::bossfighttimes() const {
  return bossfighttimes_;
}
inline void HPPlayerStateSync::set_bossfighttimes(::google::protobuf::int32 value) {
  set_has_bossfighttimes();
  bossfighttimes_ = value;
}

// optional int32 bossFightBuyTimes = 9;
inline bool HPPlayerStateSync::has_bossfightbuytimes() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void HPPlayerStateSync::set_has_bossfightbuytimes() {
  _has_bits_[0] |= 0x00000100u;
}
inline void HPPlayerStateSync::clear_has_bossfightbuytimes() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void HPPlayerStateSync::clear_bossfightbuytimes() {
  bossfightbuytimes_ = 0;
  clear_has_bossfightbuytimes();
}
inline ::google::protobuf::int32 HPPlayerStateSync::bossfightbuytimes() const {
  return bossfightbuytimes_;
}
inline void HPPlayerStateSync::set_bossfightbuytimes(::google::protobuf::int32 value) {
  set_has_bossfightbuytimes();
  bossfightbuytimes_ = value;
}

// optional int32 nextBattleTime = 10;
inline bool HPPlayerStateSync::has_nextbattletime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void HPPlayerStateSync::set_has_nextbattletime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void HPPlayerStateSync::clear_has_nextbattletime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void HPPlayerStateSync::clear_nextbattletime() {
  nextbattletime_ = 0;
  clear_has_nextbattletime();
}
inline ::google::protobuf::int32 HPPlayerStateSync::nextbattletime() const {
  return nextbattletime_;
}
inline void HPPlayerStateSync::set_nextbattletime(::google::protobuf::int32 value) {
  set_has_nextbattletime();
  nextbattletime_ = value;
}

// optional int32 curBattleMap = 11;
inline bool HPPlayerStateSync::has_curbattlemap() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void HPPlayerStateSync::set_has_curbattlemap() {
  _has_bits_[0] |= 0x00000400u;
}
inline void HPPlayerStateSync::clear_has_curbattlemap() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void HPPlayerStateSync::clear_curbattlemap() {
  curbattlemap_ = 0;
  clear_has_curbattlemap();
}
inline ::google::protobuf::int32 HPPlayerStateSync::curbattlemap() const {
  return curbattlemap_;
}
inline void HPPlayerStateSync::set_curbattlemap(::google::protobuf::int32 value) {
  set_has_curbattlemap();
  curbattlemap_ = value;
}

// optional int32 passMapId = 12;
inline bool HPPlayerStateSync::has_passmapid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void HPPlayerStateSync::set_has_passmapid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void HPPlayerStateSync::clear_has_passmapid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void HPPlayerStateSync::clear_passmapid() {
  passmapid_ = 0;
  clear_has_passmapid();
}
inline ::google::protobuf::int32 HPPlayerStateSync::passmapid() const {
  return passmapid_;
}
inline void HPPlayerStateSync::set_passmapid(::google::protobuf::int32 value) {
  set_has_passmapid();
  passmapid_ = value;
}

// optional int32 giftStatus = 13;
inline bool HPPlayerStateSync::has_giftstatus() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void HPPlayerStateSync::set_has_giftstatus() {
  _has_bits_[0] |= 0x00001000u;
}
inline void HPPlayerStateSync::clear_has_giftstatus() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void HPPlayerStateSync::clear_giftstatus() {
  giftstatus_ = 0;
  clear_has_giftstatus();
}
inline ::google::protobuf::int32 HPPlayerStateSync::giftstatus() const {
  return giftstatus_;
}
inline void HPPlayerStateSync::set_giftstatus(::google::protobuf::int32 value) {
  set_has_giftstatus();
  giftstatus_ = value;
}

// optional int32 bossWipe = 14;
inline bool HPPlayerStateSync::has_bosswipe() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void HPPlayerStateSync::set_has_bosswipe() {
  _has_bits_[0] |= 0x00002000u;
}
inline void HPPlayerStateSync::clear_has_bosswipe() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void HPPlayerStateSync::clear_bosswipe() {
  bosswipe_ = 0;
  clear_has_bosswipe();
}
inline ::google::protobuf::int32 HPPlayerStateSync::bosswipe() const {
  return bosswipe_;
}
inline void HPPlayerStateSync::set_bosswipe(::google::protobuf::int32 value) {
  set_has_bosswipe();
  bosswipe_ = value;
}

// optional int32 equipSmeltRefesh = 15;
inline bool HPPlayerStateSync::has_equipsmeltrefesh() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void HPPlayerStateSync::set_has_equipsmeltrefesh() {
  _has_bits_[0] |= 0x00004000u;
}
inline void HPPlayerStateSync::clear_has_equipsmeltrefesh() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void HPPlayerStateSync::clear_equipsmeltrefesh() {
  equipsmeltrefesh_ = 0;
  clear_has_equipsmeltrefesh();
}
inline ::google::protobuf::int32 HPPlayerStateSync::equipsmeltrefesh() const {
  return equipsmeltrefesh_;
}
inline void HPPlayerStateSync::set_equipsmeltrefesh(::google::protobuf::int32 value) {
  set_has_equipsmeltrefesh();
  equipsmeltrefesh_ = value;
}

// optional int32 gongceCompleteDays = 16;
inline bool HPPlayerStateSync::has_gongcecompletedays() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void HPPlayerStateSync::set_has_gongcecompletedays() {
  _has_bits_[0] |= 0x00008000u;
}
inline void HPPlayerStateSync::clear_has_gongcecompletedays() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void HPPlayerStateSync::clear_gongcecompletedays() {
  gongcecompletedays_ = 0;
  clear_has_gongcecompletedays();
}
inline ::google::protobuf::int32 HPPlayerStateSync::gongcecompletedays() const {
  return gongcecompletedays_;
}
inline void HPPlayerStateSync::set_gongcecompletedays(::google::protobuf::int32 value) {
  set_has_gongcecompletedays();
  gongcecompletedays_ = value;
}

// optional int32 musicOn = 17;
inline bool HPPlayerStateSync::has_musicon() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void HPPlayerStateSync::set_has_musicon() {
  _has_bits_[0] |= 0x00010000u;
}
inline void HPPlayerStateSync::clear_has_musicon() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void HPPlayerStateSync::clear_musicon() {
  musicon_ = 0;
  clear_has_musicon();
}
inline ::google::protobuf::int32 HPPlayerStateSync::musicon() const {
  return musicon_;
}
inline void HPPlayerStateSync::set_musicon(::google::protobuf::int32 value) {
  set_has_musicon();
  musicon_ = value;
}

// optional int32 soundOn = 18;
inline bool HPPlayerStateSync::has_soundon() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void HPPlayerStateSync::set_has_soundon() {
  _has_bits_[0] |= 0x00020000u;
}
inline void HPPlayerStateSync::clear_has_soundon() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void HPPlayerStateSync::clear_soundon() {
  soundon_ = 0;
  clear_has_soundon();
}
inline ::google::protobuf::int32 HPPlayerStateSync::soundon() const {
  return soundon_;
}
inline void HPPlayerStateSync::set_soundon(::google::protobuf::int32 value) {
  set_has_soundon();
  soundon_ = value;
}

// optional int32 showArea = 19;
inline bool HPPlayerStateSync::has_showarea() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void HPPlayerStateSync::set_has_showarea() {
  _has_bits_[0] |= 0x00040000u;
}
inline void HPPlayerStateSync::clear_has_showarea() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void HPPlayerStateSync::clear_showarea() {
  showarea_ = 0;
  clear_has_showarea();
}
inline ::google::protobuf::int32 HPPlayerStateSync::showarea() const {
  return showarea_;
}
inline void HPPlayerStateSync::set_showarea(::google::protobuf::int32 value) {
  set_has_showarea();
  showarea_ = value;
}

// optional int32 passEliteMapId = 20;
inline bool HPPlayerStateSync::has_passelitemapid() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void HPPlayerStateSync::set_has_passelitemapid() {
  _has_bits_[0] |= 0x00080000u;
}
inline void HPPlayerStateSync::clear_has_passelitemapid() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void HPPlayerStateSync::clear_passelitemapid() {
  passelitemapid_ = 0;
  clear_has_passelitemapid();
}
inline ::google::protobuf::int32 HPPlayerStateSync::passelitemapid() const {
  return passelitemapid_;
}
inline void HPPlayerStateSync::set_passelitemapid(::google::protobuf::int32 value) {
  set_has_passelitemapid();
  passelitemapid_ = value;
}

// optional int32 starStoneTimes = 21;
inline bool HPPlayerStateSync::has_starstonetimes() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void HPPlayerStateSync::set_has_starstonetimes() {
  _has_bits_[0] |= 0x00100000u;
}
inline void HPPlayerStateSync::clear_has_starstonetimes() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void HPPlayerStateSync::clear_starstonetimes() {
  starstonetimes_ = 0;
  clear_has_starstonetimes();
}
inline ::google::protobuf::int32 HPPlayerStateSync::starstonetimes() const {
  return starstonetimes_;
}
inline void HPPlayerStateSync::set_starstonetimes(::google::protobuf::int32 value) {
  set_has_starstonetimes();
  starstonetimes_ = value;
}

// optional int32 eliteFightTimes = 22;
inline bool HPPlayerStateSync::has_elitefighttimes() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void HPPlayerStateSync::set_has_elitefighttimes() {
  _has_bits_[0] |= 0x00200000u;
}
inline void HPPlayerStateSync::clear_has_elitefighttimes() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void HPPlayerStateSync::clear_elitefighttimes() {
  elitefighttimes_ = 0;
  clear_has_elitefighttimes();
}
inline ::google::protobuf::int32 HPPlayerStateSync::elitefighttimes() const {
  return elitefighttimes_;
}
inline void HPPlayerStateSync::set_elitefighttimes(::google::protobuf::int32 value) {
  set_has_elitefighttimes();
  elitefighttimes_ = value;
}

// optional int32 eliteFightBuyTimes = 23;
inline bool HPPlayerStateSync::has_elitefightbuytimes() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void HPPlayerStateSync::set_has_elitefightbuytimes() {
  _has_bits_[0] |= 0x00400000u;
}
inline void HPPlayerStateSync::clear_has_elitefightbuytimes() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void HPPlayerStateSync::clear_elitefightbuytimes() {
  elitefightbuytimes_ = 0;
  clear_has_elitefightbuytimes();
}
inline ::google::protobuf::int32 HPPlayerStateSync::elitefightbuytimes() const {
  return elitefightbuytimes_;
}
inline void HPPlayerStateSync::set_elitefightbuytimes(::google::protobuf::int32 value) {
  set_has_elitefightbuytimes();
  elitefightbuytimes_ = value;
}

// optional int32 newGuideState = 24;
inline bool HPPlayerStateSync::has_newguidestate() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void HPPlayerStateSync::set_has_newguidestate() {
  _has_bits_[0] |= 0x00800000u;
}
inline void HPPlayerStateSync::clear_has_newguidestate() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void HPPlayerStateSync::clear_newguidestate() {
  newguidestate_ = 0;
  clear_has_newguidestate();
}
inline ::google::protobuf::int32 HPPlayerStateSync::newguidestate() const {
  return newguidestate_;
}
inline void HPPlayerStateSync::set_newguidestate(::google::protobuf::int32 value) {
  set_has_newguidestate();
  newguidestate_ = value;
}

// optional int32 onlyText = 25;
inline bool HPPlayerStateSync::has_onlytext() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void HPPlayerStateSync::set_has_onlytext() {
  _has_bits_[0] |= 0x01000000u;
}
inline void HPPlayerStateSync::clear_has_onlytext() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void HPPlayerStateSync::clear_onlytext() {
  onlytext_ = 0;
  clear_has_onlytext();
}
inline ::google::protobuf::int32 HPPlayerStateSync::onlytext() const {
  return onlytext_;
}
inline void HPPlayerStateSync::set_onlytext(::google::protobuf::int32 value) {
  set_has_onlytext();
  onlytext_ = value;
}

// optional bool isCSOPen = 26;
inline bool HPPlayerStateSync::has_iscsopen() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void HPPlayerStateSync::set_has_iscsopen() {
  _has_bits_[0] |= 0x02000000u;
}
inline void HPPlayerStateSync::clear_has_iscsopen() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void HPPlayerStateSync::clear_iscsopen() {
  iscsopen_ = false;
  clear_has_iscsopen();
}
inline bool HPPlayerStateSync::iscsopen() const {
  return iscsopen_;
}
inline void HPPlayerStateSync::set_iscsopen(bool value) {
  set_has_iscsopen();
  iscsopen_ = value;
}

// optional int32 multiEliteTimes = 27;
inline bool HPPlayerStateSync::has_multielitetimes() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void HPPlayerStateSync::set_has_multielitetimes() {
  _has_bits_[0] |= 0x04000000u;
}
inline void HPPlayerStateSync::clear_has_multielitetimes() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void HPPlayerStateSync::clear_multielitetimes() {
  multielitetimes_ = 0;
  clear_has_multielitetimes();
}
inline ::google::protobuf::int32 HPPlayerStateSync::multielitetimes() const {
  return multielitetimes_;
}
inline void HPPlayerStateSync::set_multielitetimes(::google::protobuf::int32 value) {
  set_has_multielitetimes();
  multielitetimes_ = value;
}

// optional int32 elementBagSize = 28;
inline bool HPPlayerStateSync::has_elementbagsize() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void HPPlayerStateSync::set_has_elementbagsize() {
  _has_bits_[0] |= 0x08000000u;
}
inline void HPPlayerStateSync::clear_has_elementbagsize() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void HPPlayerStateSync::clear_elementbagsize() {
  elementbagsize_ = 0;
  clear_has_elementbagsize();
}
inline ::google::protobuf::int32 HPPlayerStateSync::elementbagsize() const {
  return elementbagsize_;
}
inline void HPPlayerStateSync::set_elementbagsize(::google::protobuf::int32 value) {
  set_has_elementbagsize();
  elementbagsize_ = value;
}

// optional bool isFirstLogin = 29;
inline bool HPPlayerStateSync::has_isfirstlogin() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void HPPlayerStateSync::set_has_isfirstlogin() {
  _has_bits_[0] |= 0x10000000u;
}
inline void HPPlayerStateSync::clear_has_isfirstlogin() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void HPPlayerStateSync::clear_isfirstlogin() {
  isfirstlogin_ = false;
  clear_has_isfirstlogin();
}
inline bool HPPlayerStateSync::isfirstlogin() const {
  return isfirstlogin_;
}
inline void HPPlayerStateSync::set_isfirstlogin(bool value) {
  set_has_isfirstlogin();
  isfirstlogin_ = value;
}

// optional int32 newBattleMap = 30;
inline bool HPPlayerStateSync::has_newbattlemap() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void HPPlayerStateSync::set_has_newbattlemap() {
  _has_bits_[0] |= 0x20000000u;
}
inline void HPPlayerStateSync::clear_has_newbattlemap() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void HPPlayerStateSync::clear_newbattlemap() {
  newbattlemap_ = 0;
  clear_has_newbattlemap();
}
inline ::google::protobuf::int32 HPPlayerStateSync::newbattlemap() const {
  return newbattlemap_;
}
inline void HPPlayerStateSync::set_newbattlemap(::google::protobuf::int32 value) {
  set_has_newbattlemap();
  newbattlemap_ = value;
}

// optional int32 autoDecoElement = 31;
inline bool HPPlayerStateSync::has_autodecoelement() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void HPPlayerStateSync::set_has_autodecoelement() {
  _has_bits_[0] |= 0x40000000u;
}
inline void HPPlayerStateSync::clear_has_autodecoelement() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void HPPlayerStateSync::clear_autodecoelement() {
  autodecoelement_ = 0;
  clear_has_autodecoelement();
}
inline ::google::protobuf::int32 HPPlayerStateSync::autodecoelement() const {
  return autodecoelement_;
}
inline void HPPlayerStateSync::set_autodecoelement(::google::protobuf::int32 value) {
  set_has_autodecoelement();
  autodecoelement_ = value;
}

// optional int32 fontSize = 32;
inline bool HPPlayerStateSync::has_fontsize() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void HPPlayerStateSync::set_has_fontsize() {
  _has_bits_[0] |= 0x80000000u;
}
inline void HPPlayerStateSync::clear_has_fontsize() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void HPPlayerStateSync::clear_fontsize() {
  fontsize_ = 0;
  clear_has_fontsize();
}
inline ::google::protobuf::int32 HPPlayerStateSync::fontsize() const {
  return fontsize_;
}
inline void HPPlayerStateSync::set_fontsize(::google::protobuf::int32 value) {
  set_has_fontsize();
  fontsize_ = value;
}

// optional int32 hourCardUseCountOneDay = 33;
inline bool HPPlayerStateSync::has_hourcardusecountoneday() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void HPPlayerStateSync::set_has_hourcardusecountoneday() {
  _has_bits_[1] |= 0x00000001u;
}
inline void HPPlayerStateSync::clear_has_hourcardusecountoneday() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void HPPlayerStateSync::clear_hourcardusecountoneday() {
  hourcardusecountoneday_ = 0;
  clear_has_hourcardusecountoneday();
}
inline ::google::protobuf::int32 HPPlayerStateSync::hourcardusecountoneday() const {
  return hourcardusecountoneday_;
}
inline void HPPlayerStateSync::set_hourcardusecountoneday(::google::protobuf::int32 value) {
  set_has_hourcardusecountoneday();
  hourcardusecountoneday_ = value;
}

// optional int32 leftFreeFastFightTimes = 34;
inline bool HPPlayerStateSync::has_leftfreefastfighttimes() const {
  return (_has_bits_[1] & 0x00000002u) != 0;
}
inline void HPPlayerStateSync::set_has_leftfreefastfighttimes() {
  _has_bits_[1] |= 0x00000002u;
}
inline void HPPlayerStateSync::clear_has_leftfreefastfighttimes() {
  _has_bits_[1] &= ~0x00000002u;
}
inline void HPPlayerStateSync::clear_leftfreefastfighttimes() {
  leftfreefastfighttimes_ = 0;
  clear_has_leftfreefastfighttimes();
}
inline ::google::protobuf::int32 HPPlayerStateSync::leftfreefastfighttimes() const {
  return leftfreefastfighttimes_;
}
inline void HPPlayerStateSync::set_leftfreefastfighttimes(::google::protobuf::int32 value) {
  set_has_leftfreefastfighttimes();
  leftfreefastfighttimes_ = value;
}

// optional int32 leftFreeRefreshShopTimes = 35;
inline bool HPPlayerStateSync::has_leftfreerefreshshoptimes() const {
  return (_has_bits_[1] & 0x00000004u) != 0;
}
inline void HPPlayerStateSync::set_has_leftfreerefreshshoptimes() {
  _has_bits_[1] |= 0x00000004u;
}
inline void HPPlayerStateSync::clear_has_leftfreerefreshshoptimes() {
  _has_bits_[1] &= ~0x00000004u;
}
inline void HPPlayerStateSync::clear_leftfreerefreshshoptimes() {
  leftfreerefreshshoptimes_ = 0;
  clear_has_leftfreerefreshshoptimes();
}
inline ::google::protobuf::int32 HPPlayerStateSync::leftfreerefreshshoptimes() const {
  return leftfreerefreshshoptimes_;
}
inline void HPPlayerStateSync::set_leftfreerefreshshoptimes(::google::protobuf::int32 value) {
  set_has_leftfreerefreshshoptimes();
  leftfreerefreshshoptimes_ = value;
}

// optional int32 leftFreeRefreshMakeEquipTimes = 36;
inline bool HPPlayerStateSync::has_leftfreerefreshmakeequiptimes() const {
  return (_has_bits_[1] & 0x00000008u) != 0;
}
inline void HPPlayerStateSync::set_has_leftfreerefreshmakeequiptimes() {
  _has_bits_[1] |= 0x00000008u;
}
inline void HPPlayerStateSync::clear_has_leftfreerefreshmakeequiptimes() {
  _has_bits_[1] &= ~0x00000008u;
}
inline void HPPlayerStateSync::clear_leftfreerefreshmakeequiptimes() {
  leftfreerefreshmakeequiptimes_ = 0;
  clear_has_leftfreerefreshmakeequiptimes();
}
inline ::google::protobuf::int32 HPPlayerStateSync::leftfreerefreshmakeequiptimes() const {
  return leftfreerefreshmakeequiptimes_;
}
inline void HPPlayerStateSync::set_leftfreerefreshmakeequiptimes(::google::protobuf::int32 value) {
  set_has_leftfreerefreshmakeequiptimes();
  leftfreerefreshmakeequiptimes_ = value;
}

// optional int32 gemShopBuyCount = 37;
inline bool HPPlayerStateSync::has_gemshopbuycount() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void HPPlayerStateSync::set_has_gemshopbuycount() {
  _has_bits_[1] |= 0x00000010u;
}
inline void HPPlayerStateSync::clear_has_gemshopbuycount() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void HPPlayerStateSync::clear_gemshopbuycount() {
  gemshopbuycount_ = 0;
  clear_has_gemshopbuycount();
}
inline ::google::protobuf::int32 HPPlayerStateSync::gemshopbuycount() const {
  return gemshopbuycount_;
}
inline void HPPlayerStateSync::set_gemshopbuycount(::google::protobuf::int32 value) {
  set_has_gemshopbuycount();
  gemshopbuycount_ = value;
}

// -------------------------------------------------------------------

// HPPlayerKickout

// required int32 reason = 1;
inline bool HPPlayerKickout::has_reason() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HPPlayerKickout::set_has_reason() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HPPlayerKickout::clear_has_reason() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HPPlayerKickout::clear_reason() {
  reason_ = 0;
  clear_has_reason();
}
inline ::google::protobuf::int32 HPPlayerKickout::reason() const {
  return reason_;
}
inline void HPPlayerKickout::set_reason(::google::protobuf::int32 value) {
  set_has_reason();
  reason_ = value;
}

// -------------------------------------------------------------------

// HPRoleCreate

// required int32 roleItemId = 1;
inline bool HPRoleCreate::has_roleitemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HPRoleCreate::set_has_roleitemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HPRoleCreate::clear_has_roleitemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HPRoleCreate::clear_roleitemid() {
  roleitemid_ = 0;
  clear_has_roleitemid();
}
inline ::google::protobuf::int32 HPRoleCreate::roleitemid() const {
  return roleitemid_;
}
inline void HPRoleCreate::set_roleitemid(::google::protobuf::int32 value) {
  set_has_roleitemid();
  roleitemid_ = value;
}

// required string roleName = 2;
inline bool HPRoleCreate::has_rolename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HPRoleCreate::set_has_rolename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HPRoleCreate::clear_has_rolename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HPRoleCreate::clear_rolename() {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    rolename_->clear();
  }
  clear_has_rolename();
}
inline const ::std::string& HPRoleCreate::rolename() const {
  return *rolename_;
}
inline void HPRoleCreate::set_rolename(const ::std::string& value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void HPRoleCreate::set_rolename(const char* value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void HPRoleCreate::set_rolename(const char* value, size_t size) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* HPRoleCreate::mutable_rolename() {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}
inline ::std::string* HPRoleCreate::release_rolename() {
  clear_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rolename_;
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void HPRoleCreate::set_allocated_rolename(::std::string* rolename) {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete rolename_;
  }
  if (rolename) {
    set_has_rolename();
    rolename_ = rolename;
  } else {
    clear_has_rolename();
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// HPRoleCreateRet

// required int32 status = 1;
inline bool HPRoleCreateRet::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HPRoleCreateRet::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HPRoleCreateRet::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HPRoleCreateRet::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 HPRoleCreateRet::status() const {
  return status_;
}
inline void HPRoleCreateRet::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}

// optional .RoleInfo roleInfo = 2;
inline bool HPRoleCreateRet::has_roleinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HPRoleCreateRet::set_has_roleinfo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HPRoleCreateRet::clear_has_roleinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HPRoleCreateRet::clear_roleinfo() {
  if (roleinfo_ != NULL) roleinfo_->::RoleInfo::Clear();
  clear_has_roleinfo();
}
inline const ::RoleInfo& HPRoleCreateRet::roleinfo() const {
  return roleinfo_ != NULL ? *roleinfo_ : *default_instance_->roleinfo_;
}
inline ::RoleInfo* HPRoleCreateRet::mutable_roleinfo() {
  set_has_roleinfo();
  if (roleinfo_ == NULL) roleinfo_ = new ::RoleInfo;
  return roleinfo_;
}
inline ::RoleInfo* HPRoleCreateRet::release_roleinfo() {
  clear_has_roleinfo();
  ::RoleInfo* temp = roleinfo_;
  roleinfo_ = NULL;
  return temp;
}
inline void HPRoleCreateRet::set_allocated_roleinfo(::RoleInfo* roleinfo) {
  delete roleinfo_;
  roleinfo_ = roleinfo;
  if (roleinfo) {
    set_has_roleinfo();
  } else {
    clear_has_roleinfo();
  }
}

// -------------------------------------------------------------------

// HPAssembleFinish

// required int32 playerId = 1;
inline bool HPAssembleFinish::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HPAssembleFinish::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HPAssembleFinish::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HPAssembleFinish::clear_playerid() {
  playerid_ = 0;
  clear_has_playerid();
}
inline ::google::protobuf::int32 HPAssembleFinish::playerid() const {
  return playerid_;
}
inline void HPAssembleFinish::set_playerid(::google::protobuf::int32 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// HPChangeSignature

// required string signature = 1;
inline bool HPChangeSignature::has_signature() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HPChangeSignature::set_has_signature() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HPChangeSignature::clear_has_signature() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HPChangeSignature::clear_signature() {
  if (signature_ != &::google::protobuf::internal::kEmptyString) {
    signature_->clear();
  }
  clear_has_signature();
}
inline const ::std::string& HPChangeSignature::signature() const {
  return *signature_;
}
inline void HPChangeSignature::set_signature(const ::std::string& value) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    signature_ = new ::std::string;
  }
  signature_->assign(value);
}
inline void HPChangeSignature::set_signature(const char* value) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    signature_ = new ::std::string;
  }
  signature_->assign(value);
}
inline void HPChangeSignature::set_signature(const char* value, size_t size) {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    signature_ = new ::std::string;
  }
  signature_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* HPChangeSignature::mutable_signature() {
  set_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    signature_ = new ::std::string;
  }
  return signature_;
}
inline ::std::string* HPChangeSignature::release_signature() {
  clear_has_signature();
  if (signature_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = signature_;
    signature_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void HPChangeSignature::set_allocated_signature(::std::string* signature) {
  if (signature_ != &::google::protobuf::internal::kEmptyString) {
    delete signature_;
  }
  if (signature) {
    set_has_signature();
    signature_ = signature;
  } else {
    clear_has_signature();
    signature_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// HPChangeSignatureRet

// required int32 version = 1;
inline bool HPChangeSignatureRet::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HPChangeSignatureRet::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HPChangeSignatureRet::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HPChangeSignatureRet::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::google::protobuf::int32 HPChangeSignatureRet::version() const {
  return version_;
}
inline void HPChangeSignatureRet::set_version(::google::protobuf::int32 value) {
  set_has_version();
  version_ = value;
}

// -------------------------------------------------------------------

// HPUserKickOut

// required int32 playerId = 1;
inline bool HPUserKickOut::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HPUserKickOut::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HPUserKickOut::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HPUserKickOut::clear_playerid() {
  playerid_ = 0;
  clear_has_playerid();
}
inline ::google::protobuf::int32 HPUserKickOut::playerid() const {
  return playerid_;
}
inline void HPUserKickOut::set_playerid(::google::protobuf::int32 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// HPDataNotify

// required int32 type = 1;
inline bool HPDataNotify::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HPDataNotify::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HPDataNotify::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HPDataNotify::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 HPDataNotify::type() const {
  return type_;
}
inline void HPDataNotify::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int32 value = 2;
inline bool HPDataNotify::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HPDataNotify::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HPDataNotify::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HPDataNotify::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 HPDataNotify::value() const {
  return value_;
}
inline void HPDataNotify::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
}

// optional int32 goodsId = 3;
inline bool HPDataNotify::has_goodsid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HPDataNotify::set_has_goodsid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HPDataNotify::clear_has_goodsid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HPDataNotify::clear_goodsid() {
  goodsid_ = 0;
  clear_has_goodsid();
}
inline ::google::protobuf::int32 HPDataNotify::goodsid() const {
  return goodsid_;
}
inline void HPDataNotify::set_goodsid(::google::protobuf::int32 value) {
  set_has_goodsid();
  goodsid_ = value;
}

// -------------------------------------------------------------------

// HPEquipSyncFinish

// required int32 playerId = 1;
inline bool HPEquipSyncFinish::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HPEquipSyncFinish::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HPEquipSyncFinish::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HPEquipSyncFinish::clear_playerid() {
  playerid_ = 0;
  clear_has_playerid();
}
inline ::google::protobuf::int32 HPEquipSyncFinish::playerid() const {
  return playerid_;
}
inline void HPEquipSyncFinish::set_playerid(::google::protobuf::int32 value) {
  set_has_playerid();
  playerid_ = value;
}

// -------------------------------------------------------------------

// HPRoleIncStarExp

// required int32 roleId = 1;
inline bool HPRoleIncStarExp::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HPRoleIncStarExp::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HPRoleIncStarExp::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HPRoleIncStarExp::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 HPRoleIncStarExp::roleid() const {
  return roleid_;
}
inline void HPRoleIncStarExp::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// required int32 itemId = 2;
inline bool HPRoleIncStarExp::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HPRoleIncStarExp::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HPRoleIncStarExp::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HPRoleIncStarExp::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 HPRoleIncStarExp::itemid() const {
  return itemid_;
}
inline void HPRoleIncStarExp::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// -------------------------------------------------------------------

// HPRoleUpStage

// required int32 roleId = 1;
inline bool HPRoleUpStage::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HPRoleUpStage::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HPRoleUpStage::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HPRoleUpStage::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 HPRoleUpStage::roleid() const {
  return roleid_;
}
inline void HPRoleUpStage::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// -------------------------------------------------------------------

// HPRoleRingIncExp

// required int32 roleId = 1;
inline bool HPRoleRingIncExp::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HPRoleRingIncExp::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HPRoleRingIncExp::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HPRoleRingIncExp::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 HPRoleRingIncExp::roleid() const {
  return roleid_;
}
inline void HPRoleRingIncExp::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// required int32 ringItemId = 2;
inline bool HPRoleRingIncExp::has_ringitemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HPRoleRingIncExp::set_has_ringitemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HPRoleRingIncExp::clear_has_ringitemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HPRoleRingIncExp::clear_ringitemid() {
  ringitemid_ = 0;
  clear_has_ringitemid();
}
inline ::google::protobuf::int32 HPRoleRingIncExp::ringitemid() const {
  return ringitemid_;
}
inline void HPRoleRingIncExp::set_ringitemid(::google::protobuf::int32 value) {
  set_has_ringitemid();
  ringitemid_ = value;
}

// repeated int32 itemId = 3;
inline int HPRoleRingIncExp::itemid_size() const {
  return itemid_.size();
}
inline void HPRoleRingIncExp::clear_itemid() {
  itemid_.Clear();
}
inline ::google::protobuf::int32 HPRoleRingIncExp::itemid(int index) const {
  return itemid_.Get(index);
}
inline void HPRoleRingIncExp::set_itemid(int index, ::google::protobuf::int32 value) {
  itemid_.Set(index, value);
}
inline void HPRoleRingIncExp::add_itemid(::google::protobuf::int32 value) {
  itemid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
HPRoleRingIncExp::itemid() const {
  return itemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
HPRoleRingIncExp::mutable_itemid() {
  return &itemid_;
}

// -------------------------------------------------------------------

// RoleRingInfo

// required int32 ringId = 1;
inline bool RoleRingInfo::has_ringid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoleRingInfo::set_has_ringid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoleRingInfo::clear_has_ringid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoleRingInfo::clear_ringid() {
  ringid_ = 0;
  clear_has_ringid();
}
inline ::google::protobuf::int32 RoleRingInfo::ringid() const {
  return ringid_;
}
inline void RoleRingInfo::set_ringid(::google::protobuf::int32 value) {
  set_has_ringid();
  ringid_ = value;
}

// required int32 roleId = 2;
inline bool RoleRingInfo::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoleRingInfo::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoleRingInfo::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoleRingInfo::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 RoleRingInfo::roleid() const {
  return roleid_;
}
inline void RoleRingInfo::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// required int32 itemId = 3;
inline bool RoleRingInfo::has_itemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoleRingInfo::set_has_itemid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoleRingInfo::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoleRingInfo::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 RoleRingInfo::itemid() const {
  return itemid_;
}
inline void RoleRingInfo::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// required int32 level = 4;
inline bool RoleRingInfo::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoleRingInfo::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoleRingInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoleRingInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 RoleRingInfo::level() const {
  return level_;
}
inline void RoleRingInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// required int32 exp = 5;
inline bool RoleRingInfo::has_exp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RoleRingInfo::set_has_exp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RoleRingInfo::clear_has_exp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RoleRingInfo::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 RoleRingInfo::exp() const {
  return exp_;
}
inline void RoleRingInfo::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// optional int32 lvlUpTimes = 6;
inline bool RoleRingInfo::has_lvluptimes() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RoleRingInfo::set_has_lvluptimes() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RoleRingInfo::clear_has_lvluptimes() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RoleRingInfo::clear_lvluptimes() {
  lvluptimes_ = 0;
  clear_has_lvluptimes();
}
inline ::google::protobuf::int32 RoleRingInfo::lvluptimes() const {
  return lvluptimes_;
}
inline void RoleRingInfo::set_lvluptimes(::google::protobuf::int32 value) {
  set_has_lvluptimes();
  lvluptimes_ = value;
}

// -------------------------------------------------------------------

// HPRoleRingInfoSync

// repeated .RoleRingInfo ringInfos = 1;
inline int HPRoleRingInfoSync::ringinfos_size() const {
  return ringinfos_.size();
}
inline void HPRoleRingInfoSync::clear_ringinfos() {
  ringinfos_.Clear();
}
inline const ::RoleRingInfo& HPRoleRingInfoSync::ringinfos(int index) const {
  return ringinfos_.Get(index);
}
inline ::RoleRingInfo* HPRoleRingInfoSync::mutable_ringinfos(int index) {
  return ringinfos_.Mutable(index);
}
inline ::RoleRingInfo* HPRoleRingInfoSync::add_ringinfos() {
  return ringinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::RoleRingInfo >&
HPRoleRingInfoSync::ringinfos() const {
  return ringinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::RoleRingInfo >*
HPRoleRingInfoSync::mutable_ringinfos() {
  return &ringinfos_;
}

// -------------------------------------------------------------------

// HPRoleRingActive

// required int32 roleId = 1;
inline bool HPRoleRingActive::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HPRoleRingActive::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HPRoleRingActive::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HPRoleRingActive::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 HPRoleRingActive::roleid() const {
  return roleid_;
}
inline void HPRoleRingActive::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
}

// required int32 itemId = 2;
inline bool HPRoleRingActive::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HPRoleRingActive::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HPRoleRingActive::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HPRoleRingActive::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 HPRoleRingActive::itemid() const {
  return itemid_;
}
inline void HPRoleRingActive::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// -------------------------------------------------------------------

// EliteMapInfo

// required int32 level = 1;
inline bool EliteMapInfo::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EliteMapInfo::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EliteMapInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EliteMapInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 EliteMapInfo::level() const {
  return level_;
}
inline void EliteMapInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// required int32 mapId = 2;
inline bool EliteMapInfo::has_mapid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EliteMapInfo::set_has_mapid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EliteMapInfo::clear_has_mapid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EliteMapInfo::clear_mapid() {
  mapid_ = 0;
  clear_has_mapid();
}
inline ::google::protobuf::int32 EliteMapInfo::mapid() const {
  return mapid_;
}
inline void EliteMapInfo::set_mapid(::google::protobuf::int32 value) {
  set_has_mapid();
  mapid_ = value;
}

// -------------------------------------------------------------------

// HPEliteMapInfoSync

// repeated .EliteMapInfo eliteMapInfos = 1;
inline int HPEliteMapInfoSync::elitemapinfos_size() const {
  return elitemapinfos_.size();
}
inline void HPEliteMapInfoSync::clear_elitemapinfos() {
  elitemapinfos_.Clear();
}
inline const ::EliteMapInfo& HPEliteMapInfoSync::elitemapinfos(int index) const {
  return elitemapinfos_.Get(index);
}
inline ::EliteMapInfo* HPEliteMapInfoSync::mutable_elitemapinfos(int index) {
  return elitemapinfos_.Mutable(index);
}
inline ::EliteMapInfo* HPEliteMapInfoSync::add_elitemapinfos() {
  return elitemapinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::EliteMapInfo >&
HPEliteMapInfoSync::elitemapinfos() const {
  return elitemapinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::EliteMapInfo >*
HPEliteMapInfoSync::mutable_elitemapinfos() {
  return &elitemapinfos_;
}

// -------------------------------------------------------------------

// HPEvaluateRewards

// -------------------------------------------------------------------

// Params

// required string key = 1;
inline bool Params::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Params::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Params::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Params::clear_key() {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    key_->clear();
  }
  clear_has_key();
}
inline const ::std::string& Params::key() const {
  return *key_;
}
inline void Params::set_key(const ::std::string& value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void Params::set_key(const char* value) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(value);
}
inline void Params::set_key(const char* value, size_t size) {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  key_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Params::mutable_key() {
  set_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    key_ = new ::std::string;
  }
  return key_;
}
inline ::std::string* Params::release_key() {
  clear_has_key();
  if (key_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = key_;
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Params::set_allocated_key(::std::string* key) {
  if (key_ != &::google::protobuf::internal::kEmptyString) {
    delete key_;
  }
  if (key) {
    set_has_key();
    key_ = key;
  } else {
    clear_has_key();
    key_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string value = 2;
inline bool Params::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Params::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Params::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Params::clear_value() {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& Params::value() const {
  return *value_;
}
inline void Params::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void Params::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void Params::set_value(const char* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Params::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  return value_;
}
inline ::std::string* Params::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Params::set_allocated_value(::std::string* value) {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    delete value_;
  }
  if (value) {
    set_has_value();
    value_ = value;
  } else {
    clear_has_value();
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// HPClientSetting

// repeated .Params params = 1;
inline int HPClientSetting::params_size() const {
  return params_.size();
}
inline void HPClientSetting::clear_params() {
  params_.Clear();
}
inline const ::Params& HPClientSetting::params(int index) const {
  return params_.Get(index);
}
inline ::Params* HPClientSetting::mutable_params(int index) {
  return params_.Mutable(index);
}
inline ::Params* HPClientSetting::add_params() {
  return params_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Params >&
HPClientSetting::params() const {
  return params_;
}
inline ::google::protobuf::RepeatedPtrField< ::Params >*
HPClientSetting::mutable_params() {
  return &params_;
}

// -------------------------------------------------------------------

// HPPlayerAreaSync

// optional string area = 1;
inline bool HPPlayerAreaSync::has_area() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HPPlayerAreaSync::set_has_area() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HPPlayerAreaSync::clear_has_area() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HPPlayerAreaSync::clear_area() {
  if (area_ != &::google::protobuf::internal::kEmptyString) {
    area_->clear();
  }
  clear_has_area();
}
inline const ::std::string& HPPlayerAreaSync::area() const {
  return *area_;
}
inline void HPPlayerAreaSync::set_area(const ::std::string& value) {
  set_has_area();
  if (area_ == &::google::protobuf::internal::kEmptyString) {
    area_ = new ::std::string;
  }
  area_->assign(value);
}
inline void HPPlayerAreaSync::set_area(const char* value) {
  set_has_area();
  if (area_ == &::google::protobuf::internal::kEmptyString) {
    area_ = new ::std::string;
  }
  area_->assign(value);
}
inline void HPPlayerAreaSync::set_area(const char* value, size_t size) {
  set_has_area();
  if (area_ == &::google::protobuf::internal::kEmptyString) {
    area_ = new ::std::string;
  }
  area_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* HPPlayerAreaSync::mutable_area() {
  set_has_area();
  if (area_ == &::google::protobuf::internal::kEmptyString) {
    area_ = new ::std::string;
  }
  return area_;
}
inline ::std::string* HPPlayerAreaSync::release_area() {
  clear_has_area();
  if (area_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = area_;
    area_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void HPPlayerAreaSync::set_allocated_area(::std::string* area) {
  if (area_ != &::google::protobuf::internal::kEmptyString) {
    delete area_;
  }
  if (area) {
    set_has_area();
    area_ = area;
  } else {
    clear_has_area();
    area_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// HPChangeRoleName

// required string name = 1;
inline bool HPChangeRoleName::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HPChangeRoleName::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HPChangeRoleName::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HPChangeRoleName::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& HPChangeRoleName::name() const {
  return *name_;
}
inline void HPChangeRoleName::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void HPChangeRoleName::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void HPChangeRoleName::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* HPChangeRoleName::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* HPChangeRoleName::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void HPChangeRoleName::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// HPChangeRoleNameRet

// required string name = 1;
inline bool HPChangeRoleNameRet::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HPChangeRoleNameRet::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HPChangeRoleNameRet::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HPChangeRoleNameRet::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& HPChangeRoleNameRet::name() const {
  return *name_;
}
inline void HPChangeRoleNameRet::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void HPChangeRoleNameRet::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void HPChangeRoleNameRet::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* HPChangeRoleNameRet::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* HPChangeRoleNameRet::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void HPChangeRoleNameRet::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// HPCommentMsg

// required int32 type = 1;
inline bool HPCommentMsg::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HPCommentMsg::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HPCommentMsg::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HPCommentMsg::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 HPCommentMsg::type() const {
  return type_;
}
inline void HPCommentMsg::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// -------------------------------------------------------------------

// HPCommentMsgRet

// required int32 number = 1;
inline bool HPCommentMsgRet::has_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HPCommentMsgRet::set_has_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HPCommentMsgRet::clear_has_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HPCommentMsgRet::clear_number() {
  number_ = 0;
  clear_has_number();
}
inline ::google::protobuf::int32 HPCommentMsgRet::number() const {
  return number_;
}
inline void HPCommentMsgRet::set_number(::google::protobuf::int32 value) {
  set_has_number();
  number_ = value;
}

// -------------------------------------------------------------------

// HPGoogleAchieveMsg

// required int32 type = 1;
inline bool HPGoogleAchieveMsg::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HPGoogleAchieveMsg::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HPGoogleAchieveMsg::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HPGoogleAchieveMsg::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 HPGoogleAchieveMsg::type() const {
  return type_;
}
inline void HPGoogleAchieveMsg::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// repeated string achieveinfo = 2;
inline int HPGoogleAchieveMsg::achieveinfo_size() const {
  return achieveinfo_.size();
}
inline void HPGoogleAchieveMsg::clear_achieveinfo() {
  achieveinfo_.Clear();
}
inline const ::std::string& HPGoogleAchieveMsg::achieveinfo(int index) const {
  return achieveinfo_.Get(index);
}
inline ::std::string* HPGoogleAchieveMsg::mutable_achieveinfo(int index) {
  return achieveinfo_.Mutable(index);
}
inline void HPGoogleAchieveMsg::set_achieveinfo(int index, const ::std::string& value) {
  achieveinfo_.Mutable(index)->assign(value);
}
inline void HPGoogleAchieveMsg::set_achieveinfo(int index, const char* value) {
  achieveinfo_.Mutable(index)->assign(value);
}
inline void HPGoogleAchieveMsg::set_achieveinfo(int index, const char* value, size_t size) {
  achieveinfo_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* HPGoogleAchieveMsg::add_achieveinfo() {
  return achieveinfo_.Add();
}
inline void HPGoogleAchieveMsg::add_achieveinfo(const ::std::string& value) {
  achieveinfo_.Add()->assign(value);
}
inline void HPGoogleAchieveMsg::add_achieveinfo(const char* value) {
  achieveinfo_.Add()->assign(value);
}
inline void HPGoogleAchieveMsg::add_achieveinfo(const char* value, size_t size) {
  achieveinfo_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
HPGoogleAchieveMsg::achieveinfo() const {
  return achieveinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
HPGoogleAchieveMsg::mutable_achieveinfo() {
  return &achieveinfo_;
}

// -------------------------------------------------------------------

// HPGoogleAchieveMsgRet

// repeated string achieveinfo = 1;
inline int HPGoogleAchieveMsgRet::achieveinfo_size() const {
  return achieveinfo_.size();
}
inline void HPGoogleAchieveMsgRet::clear_achieveinfo() {
  achieveinfo_.Clear();
}
inline const ::std::string& HPGoogleAchieveMsgRet::achieveinfo(int index) const {
  return achieveinfo_.Get(index);
}
inline ::std::string* HPGoogleAchieveMsgRet::mutable_achieveinfo(int index) {
  return achieveinfo_.Mutable(index);
}
inline void HPGoogleAchieveMsgRet::set_achieveinfo(int index, const ::std::string& value) {
  achieveinfo_.Mutable(index)->assign(value);
}
inline void HPGoogleAchieveMsgRet::set_achieveinfo(int index, const char* value) {
  achieveinfo_.Mutable(index)->assign(value);
}
inline void HPGoogleAchieveMsgRet::set_achieveinfo(int index, const char* value, size_t size) {
  achieveinfo_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* HPGoogleAchieveMsgRet::add_achieveinfo() {
  return achieveinfo_.Add();
}
inline void HPGoogleAchieveMsgRet::add_achieveinfo(const ::std::string& value) {
  achieveinfo_.Add()->assign(value);
}
inline void HPGoogleAchieveMsgRet::add_achieveinfo(const char* value) {
  achieveinfo_.Add()->assign(value);
}
inline void HPGoogleAchieveMsgRet::add_achieveinfo(const char* value, size_t size) {
  achieveinfo_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
HPGoogleAchieveMsgRet::achieveinfo() const {
  return achieveinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
HPGoogleAchieveMsgRet::mutable_achieveinfo() {
  return &achieveinfo_;
}

// -------------------------------------------------------------------

// HPFacebookShareEvent

// -------------------------------------------------------------------

// HPFacebookShareEventRet

// required int32 number = 1;
inline bool HPFacebookShareEventRet::has_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HPFacebookShareEventRet::set_has_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HPFacebookShareEventRet::clear_has_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HPFacebookShareEventRet::clear_number() {
  number_ = 0;
  clear_has_number();
}
inline ::google::protobuf::int32 HPFacebookShareEventRet::number() const {
  return number_;
}
inline void HPFacebookShareEventRet::set_number(::google::protobuf::int32 value) {
  set_has_number();
  number_ = value;
}

// -------------------------------------------------------------------

// HPFacebookShareCount

// -------------------------------------------------------------------

// HPFacebookShareCountRet

// required int32 number = 1;
inline bool HPFacebookShareCountRet::has_number() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HPFacebookShareCountRet::set_has_number() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HPFacebookShareCountRet::clear_has_number() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HPFacebookShareCountRet::clear_number() {
  number_ = 0;
  clear_has_number();
}
inline ::google::protobuf::int32 HPFacebookShareCountRet::number() const {
  return number_;
}
inline void HPFacebookShareCountRet::set_number(::google::protobuf::int32 value) {
  set_has_number();
  number_ = value;
}

// -------------------------------------------------------------------

// HPPlayerBindPrice

// -------------------------------------------------------------------

// HPPlayerBindPriceRet

// required int32 status = 1;
inline bool HPPlayerBindPriceRet::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HPPlayerBindPriceRet::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HPPlayerBindPriceRet::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HPPlayerBindPriceRet::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 HPPlayerBindPriceRet::status() const {
  return status_;
}
inline void HPPlayerBindPriceRet::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Player_2eproto__INCLUDED
