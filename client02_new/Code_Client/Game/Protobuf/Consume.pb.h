// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Consume.proto

#ifndef PROTOBUF_Consume_2eproto__INCLUDED
#define PROTOBUF_Consume_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Consume_2eproto();
void protobuf_AssignDesc_Consume_2eproto();
void protobuf_ShutdownFile_Consume_2eproto();

class SyncAttrInfo;
class ConsumeItem;
class HPConsumeInfo;

// ===================================================================

class SyncAttrInfo : public ::google::protobuf::Message {
 public:
  SyncAttrInfo();
  virtual ~SyncAttrInfo();

  SyncAttrInfo(const SyncAttrInfo& from);

  inline SyncAttrInfo& operator=(const SyncAttrInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncAttrInfo& default_instance();

  void Swap(SyncAttrInfo* other);

  // implements Message ----------------------------------------------

  SyncAttrInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncAttrInfo& from);
  void MergeFrom(const SyncAttrInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 gold = 1;
  inline bool has_gold() const;
  inline void clear_gold();
  static const int kGoldFieldNumber = 1;
  inline ::google::protobuf::int32 gold() const;
  inline void set_gold(::google::protobuf::int32 value);

  // optional int64 coin = 2;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 2;
  inline ::google::protobuf::int64 coin() const;
  inline void set_coin(::google::protobuf::int64 value);

  // optional int32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // optional int32 exp = 4;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 4;
  inline ::google::protobuf::int32 exp() const;
  inline void set_exp(::google::protobuf::int32 value);

  // optional int32 vipLevel = 5;
  inline bool has_viplevel() const;
  inline void clear_viplevel();
  static const int kVipLevelFieldNumber = 5;
  inline ::google::protobuf::int32 viplevel() const;
  inline void set_viplevel(::google::protobuf::int32 value);

  // optional int32 smeltValue = 6;
  inline bool has_smeltvalue() const;
  inline void clear_smeltvalue();
  static const int kSmeltValueFieldNumber = 6;
  inline ::google::protobuf::int32 smeltvalue() const;
  inline void set_smeltvalue(::google::protobuf::int32 value);

  // optional int32 contribution = 7;
  inline bool has_contribution() const;
  inline void clear_contribution();
  static const int kContributionFieldNumber = 7;
  inline ::google::protobuf::int32 contribution() const;
  inline void set_contribution(::google::protobuf::int32 value);

  // optional int32 honorValue = 8;
  inline bool has_honorvalue() const;
  inline void clear_honorvalue();
  static const int kHonorValueFieldNumber = 8;
  inline ::google::protobuf::int32 honorvalue() const;
  inline void set_honorvalue(::google::protobuf::int32 value);

  // optional int32 reputationValue = 9;
  inline bool has_reputationvalue() const;
  inline void clear_reputationvalue();
  static const int kReputationValueFieldNumber = 9;
  inline ::google::protobuf::int32 reputationvalue() const;
  inline void set_reputationvalue(::google::protobuf::int32 value);

  // optional int32 crystalValue = 20;
  inline bool has_crystalvalue() const;
  inline void clear_crystalvalue();
  static const int kCrystalValueFieldNumber = 20;
  inline ::google::protobuf::int32 crystalvalue() const;
  inline void set_crystalvalue(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SyncAttrInfo)
 private:
  inline void set_has_gold();
  inline void clear_has_gold();
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_viplevel();
  inline void clear_has_viplevel();
  inline void set_has_smeltvalue();
  inline void clear_has_smeltvalue();
  inline void set_has_contribution();
  inline void clear_has_contribution();
  inline void set_has_honorvalue();
  inline void clear_has_honorvalue();
  inline void set_has_reputationvalue();
  inline void clear_has_reputationvalue();
  inline void set_has_crystalvalue();
  inline void clear_has_crystalvalue();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 coin_;
  ::google::protobuf::int32 gold_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 exp_;
  ::google::protobuf::int32 viplevel_;
  ::google::protobuf::int32 smeltvalue_;
  ::google::protobuf::int32 contribution_;
  ::google::protobuf::int32 honorvalue_;
  ::google::protobuf::int32 reputationvalue_;
  ::google::protobuf::int32 crystalvalue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];

  friend void  protobuf_AddDesc_Consume_2eproto();
  friend void protobuf_AssignDesc_Consume_2eproto();
  friend void protobuf_ShutdownFile_Consume_2eproto();

  void InitAsDefaultInstance();
  static SyncAttrInfo* default_instance_;
};
// -------------------------------------------------------------------

class ConsumeItem : public ::google::protobuf::Message {
 public:
  ConsumeItem();
  virtual ~ConsumeItem();

  ConsumeItem(const ConsumeItem& from);

  inline ConsumeItem& operator=(const ConsumeItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConsumeItem& default_instance();

  void Swap(ConsumeItem* other);

  // implements Message ----------------------------------------------

  ConsumeItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ConsumeItem& from);
  void MergeFrom(const ConsumeItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);

  // required int64 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int64 id() const;
  inline void set_id(::google::protobuf::int64 value);

  // required int32 itemId = 3;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemIdFieldNumber = 3;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // optional int32 count = 4;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 4;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ConsumeItem)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 id_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 count_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_Consume_2eproto();
  friend void protobuf_AssignDesc_Consume_2eproto();
  friend void protobuf_ShutdownFile_Consume_2eproto();

  void InitAsDefaultInstance();
  static ConsumeItem* default_instance_;
};
// -------------------------------------------------------------------

class HPConsumeInfo : public ::google::protobuf::Message {
 public:
  HPConsumeInfo();
  virtual ~HPConsumeInfo();

  HPConsumeInfo(const HPConsumeInfo& from);

  inline HPConsumeInfo& operator=(const HPConsumeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HPConsumeInfo& default_instance();

  void Swap(HPConsumeInfo* other);

  // implements Message ----------------------------------------------

  HPConsumeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HPConsumeInfo& from);
  void MergeFrom(const HPConsumeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .SyncAttrInfo attrInfo = 1;
  inline bool has_attrinfo() const;
  inline void clear_attrinfo();
  static const int kAttrInfoFieldNumber = 1;
  inline const ::SyncAttrInfo& attrinfo() const;
  inline ::SyncAttrInfo* mutable_attrinfo();
  inline ::SyncAttrInfo* release_attrinfo();
  inline void set_allocated_attrinfo(::SyncAttrInfo* attrinfo);

  // repeated .ConsumeItem consumeItem = 2;
  inline int consumeitem_size() const;
  inline void clear_consumeitem();
  static const int kConsumeItemFieldNumber = 2;
  inline const ::ConsumeItem& consumeitem(int index) const;
  inline ::ConsumeItem* mutable_consumeitem(int index);
  inline ::ConsumeItem* add_consumeitem();
  inline const ::google::protobuf::RepeatedPtrField< ::ConsumeItem >&
      consumeitem() const;
  inline ::google::protobuf::RepeatedPtrField< ::ConsumeItem >*
      mutable_consumeitem();

  // @@protoc_insertion_point(class_scope:HPConsumeInfo)
 private:
  inline void set_has_attrinfo();
  inline void clear_has_attrinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::SyncAttrInfo* attrinfo_;
  ::google::protobuf::RepeatedPtrField< ::ConsumeItem > consumeitem_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_Consume_2eproto();
  friend void protobuf_AssignDesc_Consume_2eproto();
  friend void protobuf_ShutdownFile_Consume_2eproto();

  void InitAsDefaultInstance();
  static HPConsumeInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// SyncAttrInfo

// optional int32 gold = 1;
inline bool SyncAttrInfo::has_gold() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncAttrInfo::set_has_gold() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncAttrInfo::clear_has_gold() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncAttrInfo::clear_gold() {
  gold_ = 0;
  clear_has_gold();
}
inline ::google::protobuf::int32 SyncAttrInfo::gold() const {
  return gold_;
}
inline void SyncAttrInfo::set_gold(::google::protobuf::int32 value) {
  set_has_gold();
  gold_ = value;
}

// optional int64 coin = 2;
inline bool SyncAttrInfo::has_coin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SyncAttrInfo::set_has_coin() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SyncAttrInfo::clear_has_coin() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SyncAttrInfo::clear_coin() {
  coin_ = GOOGLE_LONGLONG(0);
  clear_has_coin();
}
inline ::google::protobuf::int64 SyncAttrInfo::coin() const {
  return coin_;
}
inline void SyncAttrInfo::set_coin(::google::protobuf::int64 value) {
  set_has_coin();
  coin_ = value;
}

// optional int32 level = 3;
inline bool SyncAttrInfo::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SyncAttrInfo::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SyncAttrInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SyncAttrInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 SyncAttrInfo::level() const {
  return level_;
}
inline void SyncAttrInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// optional int32 exp = 4;
inline bool SyncAttrInfo::has_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SyncAttrInfo::set_has_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SyncAttrInfo::clear_has_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SyncAttrInfo::clear_exp() {
  exp_ = 0;
  clear_has_exp();
}
inline ::google::protobuf::int32 SyncAttrInfo::exp() const {
  return exp_;
}
inline void SyncAttrInfo::set_exp(::google::protobuf::int32 value) {
  set_has_exp();
  exp_ = value;
}

// optional int32 vipLevel = 5;
inline bool SyncAttrInfo::has_viplevel() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SyncAttrInfo::set_has_viplevel() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SyncAttrInfo::clear_has_viplevel() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SyncAttrInfo::clear_viplevel() {
  viplevel_ = 0;
  clear_has_viplevel();
}
inline ::google::protobuf::int32 SyncAttrInfo::viplevel() const {
  return viplevel_;
}
inline void SyncAttrInfo::set_viplevel(::google::protobuf::int32 value) {
  set_has_viplevel();
  viplevel_ = value;
}

// optional int32 smeltValue = 6;
inline bool SyncAttrInfo::has_smeltvalue() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SyncAttrInfo::set_has_smeltvalue() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SyncAttrInfo::clear_has_smeltvalue() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SyncAttrInfo::clear_smeltvalue() {
  smeltvalue_ = 0;
  clear_has_smeltvalue();
}
inline ::google::protobuf::int32 SyncAttrInfo::smeltvalue() const {
  return smeltvalue_;
}
inline void SyncAttrInfo::set_smeltvalue(::google::protobuf::int32 value) {
  set_has_smeltvalue();
  smeltvalue_ = value;
}

// optional int32 contribution = 7;
inline bool SyncAttrInfo::has_contribution() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SyncAttrInfo::set_has_contribution() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SyncAttrInfo::clear_has_contribution() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SyncAttrInfo::clear_contribution() {
  contribution_ = 0;
  clear_has_contribution();
}
inline ::google::protobuf::int32 SyncAttrInfo::contribution() const {
  return contribution_;
}
inline void SyncAttrInfo::set_contribution(::google::protobuf::int32 value) {
  set_has_contribution();
  contribution_ = value;
}

// optional int32 honorValue = 8;
inline bool SyncAttrInfo::has_honorvalue() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SyncAttrInfo::set_has_honorvalue() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SyncAttrInfo::clear_has_honorvalue() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SyncAttrInfo::clear_honorvalue() {
  honorvalue_ = 0;
  clear_has_honorvalue();
}
inline ::google::protobuf::int32 SyncAttrInfo::honorvalue() const {
  return honorvalue_;
}
inline void SyncAttrInfo::set_honorvalue(::google::protobuf::int32 value) {
  set_has_honorvalue();
  honorvalue_ = value;
}

// optional int32 reputationValue = 9;
inline bool SyncAttrInfo::has_reputationvalue() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SyncAttrInfo::set_has_reputationvalue() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SyncAttrInfo::clear_has_reputationvalue() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SyncAttrInfo::clear_reputationvalue() {
  reputationvalue_ = 0;
  clear_has_reputationvalue();
}
inline ::google::protobuf::int32 SyncAttrInfo::reputationvalue() const {
  return reputationvalue_;
}
inline void SyncAttrInfo::set_reputationvalue(::google::protobuf::int32 value) {
  set_has_reputationvalue();
  reputationvalue_ = value;
}

// optional int32 crystalValue = 20;
inline bool SyncAttrInfo::has_crystalvalue() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void SyncAttrInfo::set_has_crystalvalue() {
  _has_bits_[0] |= 0x00000200u;
}
inline void SyncAttrInfo::clear_has_crystalvalue() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void SyncAttrInfo::clear_crystalvalue() {
  crystalvalue_ = 0;
  clear_has_crystalvalue();
}
inline ::google::protobuf::int32 SyncAttrInfo::crystalvalue() const {
  return crystalvalue_;
}
inline void SyncAttrInfo::set_crystalvalue(::google::protobuf::int32 value) {
  set_has_crystalvalue();
  crystalvalue_ = value;
}

// -------------------------------------------------------------------

// ConsumeItem

// required int32 type = 1;
inline bool ConsumeItem::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConsumeItem::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConsumeItem::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConsumeItem::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 ConsumeItem::type() const {
  return type_;
}
inline void ConsumeItem::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
}

// required int64 id = 2;
inline bool ConsumeItem::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ConsumeItem::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ConsumeItem::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ConsumeItem::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::int64 ConsumeItem::id() const {
  return id_;
}
inline void ConsumeItem::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
}

// required int32 itemId = 3;
inline bool ConsumeItem::has_itemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ConsumeItem::set_has_itemid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ConsumeItem::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ConsumeItem::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 ConsumeItem::itemid() const {
  return itemid_;
}
inline void ConsumeItem::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional int32 count = 4;
inline bool ConsumeItem::has_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ConsumeItem::set_has_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ConsumeItem::clear_has_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ConsumeItem::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 ConsumeItem::count() const {
  return count_;
}
inline void ConsumeItem::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
}

// -------------------------------------------------------------------

// HPConsumeInfo

// optional .SyncAttrInfo attrInfo = 1;
inline bool HPConsumeInfo::has_attrinfo() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HPConsumeInfo::set_has_attrinfo() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HPConsumeInfo::clear_has_attrinfo() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HPConsumeInfo::clear_attrinfo() {
  if (attrinfo_ != NULL) attrinfo_->::SyncAttrInfo::Clear();
  clear_has_attrinfo();
}
inline const ::SyncAttrInfo& HPConsumeInfo::attrinfo() const {
  return attrinfo_ != NULL ? *attrinfo_ : *default_instance_->attrinfo_;
}
inline ::SyncAttrInfo* HPConsumeInfo::mutable_attrinfo() {
  set_has_attrinfo();
  if (attrinfo_ == NULL) attrinfo_ = new ::SyncAttrInfo;
  return attrinfo_;
}
inline ::SyncAttrInfo* HPConsumeInfo::release_attrinfo() {
  clear_has_attrinfo();
  ::SyncAttrInfo* temp = attrinfo_;
  attrinfo_ = NULL;
  return temp;
}
inline void HPConsumeInfo::set_allocated_attrinfo(::SyncAttrInfo* attrinfo) {
  delete attrinfo_;
  attrinfo_ = attrinfo;
  if (attrinfo) {
    set_has_attrinfo();
  } else {
    clear_has_attrinfo();
  }
}

// repeated .ConsumeItem consumeItem = 2;
inline int HPConsumeInfo::consumeitem_size() const {
  return consumeitem_.size();
}
inline void HPConsumeInfo::clear_consumeitem() {
  consumeitem_.Clear();
}
inline const ::ConsumeItem& HPConsumeInfo::consumeitem(int index) const {
  return consumeitem_.Get(index);
}
inline ::ConsumeItem* HPConsumeInfo::mutable_consumeitem(int index) {
  return consumeitem_.Mutable(index);
}
inline ::ConsumeItem* HPConsumeInfo::add_consumeitem() {
  return consumeitem_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ConsumeItem >&
HPConsumeInfo::consumeitem() const {
  return consumeitem_;
}
inline ::google::protobuf::RepeatedPtrField< ::ConsumeItem >*
HPConsumeInfo::mutable_consumeitem() {
  return &consumeitem_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Consume_2eproto__INCLUDED
